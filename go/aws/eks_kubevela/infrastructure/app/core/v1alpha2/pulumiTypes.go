// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Application is the Schema for the applications API
type ApplicationType struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// ApplicationSpec is the spec of Application
	Spec *ApplicationSpec `pulumi:"spec"`
	// AppStatus defines the observed state of Application
	Status *ApplicationStatus `pulumi:"status"`
}

type ApplicationMetadata struct {
}

// ApplicationSpec is the spec of Application
type ApplicationSpec struct {
	Components []ApplicationSpecComponents `pulumi:"components"`
	// RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved
	RolloutPlan *ApplicationSpecRolloutplan `pulumi:"rolloutPlan"`
}

// ApplicationSpecInput is an input type that accepts ApplicationSpecArgs and ApplicationSpecOutput values.
// You can construct a concrete instance of `ApplicationSpecInput` via:
//
//	ApplicationSpecArgs{...}
type ApplicationSpecInput interface {
	pulumi.Input

	ToApplicationSpecOutput() ApplicationSpecOutput
	ToApplicationSpecOutputWithContext(context.Context) ApplicationSpecOutput
}

// ApplicationSpec is the spec of Application
type ApplicationSpecArgs struct {
	Components ApplicationSpecComponentsArrayInput `pulumi:"components"`
	// RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved
	RolloutPlan ApplicationSpecRolloutplanPtrInput `pulumi:"rolloutPlan"`
}

func (ApplicationSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpec)(nil)).Elem()
}

func (i ApplicationSpecArgs) ToApplicationSpecOutput() ApplicationSpecOutput {
	return i.ToApplicationSpecOutputWithContext(context.Background())
}

func (i ApplicationSpecArgs) ToApplicationSpecOutputWithContext(ctx context.Context) ApplicationSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecOutput)
}

func (i ApplicationSpecArgs) ToApplicationSpecPtrOutput() ApplicationSpecPtrOutput {
	return i.ToApplicationSpecPtrOutputWithContext(context.Background())
}

func (i ApplicationSpecArgs) ToApplicationSpecPtrOutputWithContext(ctx context.Context) ApplicationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecOutput).ToApplicationSpecPtrOutputWithContext(ctx)
}

// ApplicationSpecPtrInput is an input type that accepts ApplicationSpecArgs, ApplicationSpecPtr and ApplicationSpecPtrOutput values.
// You can construct a concrete instance of `ApplicationSpecPtrInput` via:
//
//	        ApplicationSpecArgs{...}
//
//	or:
//
//	        nil
type ApplicationSpecPtrInput interface {
	pulumi.Input

	ToApplicationSpecPtrOutput() ApplicationSpecPtrOutput
	ToApplicationSpecPtrOutputWithContext(context.Context) ApplicationSpecPtrOutput
}

type applicationSpecPtrType ApplicationSpecArgs

func ApplicationSpecPtr(v *ApplicationSpecArgs) ApplicationSpecPtrInput {
	return (*applicationSpecPtrType)(v)
}

func (*applicationSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpec)(nil)).Elem()
}

func (i *applicationSpecPtrType) ToApplicationSpecPtrOutput() ApplicationSpecPtrOutput {
	return i.ToApplicationSpecPtrOutputWithContext(context.Background())
}

func (i *applicationSpecPtrType) ToApplicationSpecPtrOutputWithContext(ctx context.Context) ApplicationSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecPtrOutput)
}

// ApplicationSpec is the spec of Application
type ApplicationSpecOutput struct{ *pulumi.OutputState }

func (ApplicationSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpec)(nil)).Elem()
}

func (o ApplicationSpecOutput) ToApplicationSpecOutput() ApplicationSpecOutput {
	return o
}

func (o ApplicationSpecOutput) ToApplicationSpecOutputWithContext(ctx context.Context) ApplicationSpecOutput {
	return o
}

func (o ApplicationSpecOutput) ToApplicationSpecPtrOutput() ApplicationSpecPtrOutput {
	return o.ToApplicationSpecPtrOutputWithContext(context.Background())
}

func (o ApplicationSpecOutput) ToApplicationSpecPtrOutputWithContext(ctx context.Context) ApplicationSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationSpec) *ApplicationSpec {
		return &v
	}).(ApplicationSpecPtrOutput)
}

func (o ApplicationSpecOutput) Components() ApplicationSpecComponentsArrayOutput {
	return o.ApplyT(func(v ApplicationSpec) []ApplicationSpecComponents { return v.Components }).(ApplicationSpecComponentsArrayOutput)
}

// RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved
func (o ApplicationSpecOutput) RolloutPlan() ApplicationSpecRolloutplanPtrOutput {
	return o.ApplyT(func(v ApplicationSpec) *ApplicationSpecRolloutplan { return v.RolloutPlan }).(ApplicationSpecRolloutplanPtrOutput)
}

type ApplicationSpecPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpec)(nil)).Elem()
}

func (o ApplicationSpecPtrOutput) ToApplicationSpecPtrOutput() ApplicationSpecPtrOutput {
	return o
}

func (o ApplicationSpecPtrOutput) ToApplicationSpecPtrOutputWithContext(ctx context.Context) ApplicationSpecPtrOutput {
	return o
}

func (o ApplicationSpecPtrOutput) Elem() ApplicationSpecOutput {
	return o.ApplyT(func(v *ApplicationSpec) ApplicationSpec {
		if v != nil {
			return *v
		}
		var ret ApplicationSpec
		return ret
	}).(ApplicationSpecOutput)
}

func (o ApplicationSpecPtrOutput) Components() ApplicationSpecComponentsArrayOutput {
	return o.ApplyT(func(v *ApplicationSpec) []ApplicationSpecComponents {
		if v == nil {
			return nil
		}
		return v.Components
	}).(ApplicationSpecComponentsArrayOutput)
}

// RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved
func (o ApplicationSpecPtrOutput) RolloutPlan() ApplicationSpecRolloutplanPtrOutput {
	return o.ApplyT(func(v *ApplicationSpec) *ApplicationSpecRolloutplan {
		if v == nil {
			return nil
		}
		return v.RolloutPlan
	}).(ApplicationSpecRolloutplanPtrOutput)
}

// ApplicationComponent describe the component of application
type ApplicationSpecComponents struct {
	Name string `pulumi:"name"`
	// scopes in ApplicationComponent defines the component-level scopes the format is <scope-type:scope-instance-name> pairs, the key represents type of `ScopeDefinition` while the value represent the name of scope instance.
	Scopes   map[string]interface{} `pulumi:"scopes"`
	Settings map[string]interface{} `pulumi:"settings"`
	// Traits define the trait of one component, the type must be array to keep the order.
	Traits []ApplicationSpecComponentsTraits `pulumi:"traits"`
	Type   string                            `pulumi:"type"`
}

// ApplicationSpecComponentsInput is an input type that accepts ApplicationSpecComponentsArgs and ApplicationSpecComponentsOutput values.
// You can construct a concrete instance of `ApplicationSpecComponentsInput` via:
//
//	ApplicationSpecComponentsArgs{...}
type ApplicationSpecComponentsInput interface {
	pulumi.Input

	ToApplicationSpecComponentsOutput() ApplicationSpecComponentsOutput
	ToApplicationSpecComponentsOutputWithContext(context.Context) ApplicationSpecComponentsOutput
}

// ApplicationComponent describe the component of application
type ApplicationSpecComponentsArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
	// scopes in ApplicationComponent defines the component-level scopes the format is <scope-type:scope-instance-name> pairs, the key represents type of `ScopeDefinition` while the value represent the name of scope instance.
	Scopes   pulumi.MapInput `pulumi:"scopes"`
	Settings pulumi.MapInput `pulumi:"settings"`
	// Traits define the trait of one component, the type must be array to keep the order.
	Traits ApplicationSpecComponentsTraitsArrayInput `pulumi:"traits"`
	Type   pulumi.StringInput                        `pulumi:"type"`
}

func (ApplicationSpecComponentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecComponents)(nil)).Elem()
}

func (i ApplicationSpecComponentsArgs) ToApplicationSpecComponentsOutput() ApplicationSpecComponentsOutput {
	return i.ToApplicationSpecComponentsOutputWithContext(context.Background())
}

func (i ApplicationSpecComponentsArgs) ToApplicationSpecComponentsOutputWithContext(ctx context.Context) ApplicationSpecComponentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecComponentsOutput)
}

// ApplicationSpecComponentsArrayInput is an input type that accepts ApplicationSpecComponentsArray and ApplicationSpecComponentsArrayOutput values.
// You can construct a concrete instance of `ApplicationSpecComponentsArrayInput` via:
//
//	ApplicationSpecComponentsArray{ ApplicationSpecComponentsArgs{...} }
type ApplicationSpecComponentsArrayInput interface {
	pulumi.Input

	ToApplicationSpecComponentsArrayOutput() ApplicationSpecComponentsArrayOutput
	ToApplicationSpecComponentsArrayOutputWithContext(context.Context) ApplicationSpecComponentsArrayOutput
}

type ApplicationSpecComponentsArray []ApplicationSpecComponentsInput

func (ApplicationSpecComponentsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecComponents)(nil)).Elem()
}

func (i ApplicationSpecComponentsArray) ToApplicationSpecComponentsArrayOutput() ApplicationSpecComponentsArrayOutput {
	return i.ToApplicationSpecComponentsArrayOutputWithContext(context.Background())
}

func (i ApplicationSpecComponentsArray) ToApplicationSpecComponentsArrayOutputWithContext(ctx context.Context) ApplicationSpecComponentsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecComponentsArrayOutput)
}

// ApplicationComponent describe the component of application
type ApplicationSpecComponentsOutput struct{ *pulumi.OutputState }

func (ApplicationSpecComponentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecComponents)(nil)).Elem()
}

func (o ApplicationSpecComponentsOutput) ToApplicationSpecComponentsOutput() ApplicationSpecComponentsOutput {
	return o
}

func (o ApplicationSpecComponentsOutput) ToApplicationSpecComponentsOutputWithContext(ctx context.Context) ApplicationSpecComponentsOutput {
	return o
}

func (o ApplicationSpecComponentsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecComponents) string { return v.Name }).(pulumi.StringOutput)
}

// scopes in ApplicationComponent defines the component-level scopes the format is <scope-type:scope-instance-name> pairs, the key represents type of `ScopeDefinition` while the value represent the name of scope instance.
func (o ApplicationSpecComponentsOutput) Scopes() pulumi.MapOutput {
	return o.ApplyT(func(v ApplicationSpecComponents) map[string]interface{} { return v.Scopes }).(pulumi.MapOutput)
}

func (o ApplicationSpecComponentsOutput) Settings() pulumi.MapOutput {
	return o.ApplyT(func(v ApplicationSpecComponents) map[string]interface{} { return v.Settings }).(pulumi.MapOutput)
}

// Traits define the trait of one component, the type must be array to keep the order.
func (o ApplicationSpecComponentsOutput) Traits() ApplicationSpecComponentsTraitsArrayOutput {
	return o.ApplyT(func(v ApplicationSpecComponents) []ApplicationSpecComponentsTraits { return v.Traits }).(ApplicationSpecComponentsTraitsArrayOutput)
}

func (o ApplicationSpecComponentsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecComponents) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationSpecComponentsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSpecComponentsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecComponents)(nil)).Elem()
}

func (o ApplicationSpecComponentsArrayOutput) ToApplicationSpecComponentsArrayOutput() ApplicationSpecComponentsArrayOutput {
	return o
}

func (o ApplicationSpecComponentsArrayOutput) ToApplicationSpecComponentsArrayOutputWithContext(ctx context.Context) ApplicationSpecComponentsArrayOutput {
	return o
}

func (o ApplicationSpecComponentsArrayOutput) Index(i pulumi.IntInput) ApplicationSpecComponentsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSpecComponents {
		return vs[0].([]ApplicationSpecComponents)[vs[1].(int)]
	}).(ApplicationSpecComponentsOutput)
}

// ApplicationTrait defines the trait of application
type ApplicationSpecComponentsTraits struct {
	Name       string                 `pulumi:"name"`
	Properties map[string]interface{} `pulumi:"properties"`
}

// ApplicationSpecComponentsTraitsInput is an input type that accepts ApplicationSpecComponentsTraitsArgs and ApplicationSpecComponentsTraitsOutput values.
// You can construct a concrete instance of `ApplicationSpecComponentsTraitsInput` via:
//
//	ApplicationSpecComponentsTraitsArgs{...}
type ApplicationSpecComponentsTraitsInput interface {
	pulumi.Input

	ToApplicationSpecComponentsTraitsOutput() ApplicationSpecComponentsTraitsOutput
	ToApplicationSpecComponentsTraitsOutputWithContext(context.Context) ApplicationSpecComponentsTraitsOutput
}

// ApplicationTrait defines the trait of application
type ApplicationSpecComponentsTraitsArgs struct {
	Name       pulumi.StringInput `pulumi:"name"`
	Properties pulumi.MapInput    `pulumi:"properties"`
}

func (ApplicationSpecComponentsTraitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecComponentsTraits)(nil)).Elem()
}

func (i ApplicationSpecComponentsTraitsArgs) ToApplicationSpecComponentsTraitsOutput() ApplicationSpecComponentsTraitsOutput {
	return i.ToApplicationSpecComponentsTraitsOutputWithContext(context.Background())
}

func (i ApplicationSpecComponentsTraitsArgs) ToApplicationSpecComponentsTraitsOutputWithContext(ctx context.Context) ApplicationSpecComponentsTraitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecComponentsTraitsOutput)
}

// ApplicationSpecComponentsTraitsArrayInput is an input type that accepts ApplicationSpecComponentsTraitsArray and ApplicationSpecComponentsTraitsArrayOutput values.
// You can construct a concrete instance of `ApplicationSpecComponentsTraitsArrayInput` via:
//
//	ApplicationSpecComponentsTraitsArray{ ApplicationSpecComponentsTraitsArgs{...} }
type ApplicationSpecComponentsTraitsArrayInput interface {
	pulumi.Input

	ToApplicationSpecComponentsTraitsArrayOutput() ApplicationSpecComponentsTraitsArrayOutput
	ToApplicationSpecComponentsTraitsArrayOutputWithContext(context.Context) ApplicationSpecComponentsTraitsArrayOutput
}

type ApplicationSpecComponentsTraitsArray []ApplicationSpecComponentsTraitsInput

func (ApplicationSpecComponentsTraitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecComponentsTraits)(nil)).Elem()
}

func (i ApplicationSpecComponentsTraitsArray) ToApplicationSpecComponentsTraitsArrayOutput() ApplicationSpecComponentsTraitsArrayOutput {
	return i.ToApplicationSpecComponentsTraitsArrayOutputWithContext(context.Background())
}

func (i ApplicationSpecComponentsTraitsArray) ToApplicationSpecComponentsTraitsArrayOutputWithContext(ctx context.Context) ApplicationSpecComponentsTraitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecComponentsTraitsArrayOutput)
}

// ApplicationTrait defines the trait of application
type ApplicationSpecComponentsTraitsOutput struct{ *pulumi.OutputState }

func (ApplicationSpecComponentsTraitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecComponentsTraits)(nil)).Elem()
}

func (o ApplicationSpecComponentsTraitsOutput) ToApplicationSpecComponentsTraitsOutput() ApplicationSpecComponentsTraitsOutput {
	return o
}

func (o ApplicationSpecComponentsTraitsOutput) ToApplicationSpecComponentsTraitsOutputWithContext(ctx context.Context) ApplicationSpecComponentsTraitsOutput {
	return o
}

func (o ApplicationSpecComponentsTraitsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecComponentsTraits) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationSpecComponentsTraitsOutput) Properties() pulumi.MapOutput {
	return o.ApplyT(func(v ApplicationSpecComponentsTraits) map[string]interface{} { return v.Properties }).(pulumi.MapOutput)
}

type ApplicationSpecComponentsTraitsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSpecComponentsTraitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecComponentsTraits)(nil)).Elem()
}

func (o ApplicationSpecComponentsTraitsArrayOutput) ToApplicationSpecComponentsTraitsArrayOutput() ApplicationSpecComponentsTraitsArrayOutput {
	return o
}

func (o ApplicationSpecComponentsTraitsArrayOutput) ToApplicationSpecComponentsTraitsArrayOutputWithContext(ctx context.Context) ApplicationSpecComponentsTraitsArrayOutput {
	return o
}

func (o ApplicationSpecComponentsTraitsArrayOutput) Index(i pulumi.IntInput) ApplicationSpecComponentsTraitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSpecComponentsTraits {
		return vs[0].([]ApplicationSpecComponentsTraits)[vs[1].(int)]
	}).(ApplicationSpecComponentsTraitsOutput)
}

// RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved
type ApplicationSpecRolloutplan struct {
	// All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches
	BatchPartition *int `pulumi:"batchPartition"`
	// CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process
	CanaryMetric []ApplicationSpecRolloutplanCanarymetric `pulumi:"canaryMetric"`
	// The number of batches, default = 1
	NumBatches *int `pulumi:"numBatches"`
	// Paused the rollout, default is false
	Paused *bool `pulumi:"paused"`
	// The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty
	RolloutBatches []ApplicationSpecRolloutplanRolloutbatches `pulumi:"rolloutBatches"`
	// RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType
	RolloutStrategy *string `pulumi:"rolloutStrategy"`
	// RolloutWebhooks provide a way for the rollout to interact with an external process
	RolloutWebhooks []ApplicationSpecRolloutplanRolloutwebhooks `pulumi:"rolloutWebhooks"`
	// The size of the target resource. The default is the same as the size of the source resource.
	TargetSize *int `pulumi:"targetSize"`
}

// ApplicationSpecRolloutplanInput is an input type that accepts ApplicationSpecRolloutplanArgs and ApplicationSpecRolloutplanOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanInput` via:
//
//	ApplicationSpecRolloutplanArgs{...}
type ApplicationSpecRolloutplanInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanOutput() ApplicationSpecRolloutplanOutput
	ToApplicationSpecRolloutplanOutputWithContext(context.Context) ApplicationSpecRolloutplanOutput
}

// RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved
type ApplicationSpecRolloutplanArgs struct {
	// All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches
	BatchPartition pulumi.IntPtrInput `pulumi:"batchPartition"`
	// CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process
	CanaryMetric ApplicationSpecRolloutplanCanarymetricArrayInput `pulumi:"canaryMetric"`
	// The number of batches, default = 1
	NumBatches pulumi.IntPtrInput `pulumi:"numBatches"`
	// Paused the rollout, default is false
	Paused pulumi.BoolPtrInput `pulumi:"paused"`
	// The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty
	RolloutBatches ApplicationSpecRolloutplanRolloutbatchesArrayInput `pulumi:"rolloutBatches"`
	// RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType
	RolloutStrategy pulumi.StringPtrInput `pulumi:"rolloutStrategy"`
	// RolloutWebhooks provide a way for the rollout to interact with an external process
	RolloutWebhooks ApplicationSpecRolloutplanRolloutwebhooksArrayInput `pulumi:"rolloutWebhooks"`
	// The size of the target resource. The default is the same as the size of the source resource.
	TargetSize pulumi.IntPtrInput `pulumi:"targetSize"`
}

func (ApplicationSpecRolloutplanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplan)(nil)).Elem()
}

func (i ApplicationSpecRolloutplanArgs) ToApplicationSpecRolloutplanOutput() ApplicationSpecRolloutplanOutput {
	return i.ToApplicationSpecRolloutplanOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanArgs) ToApplicationSpecRolloutplanOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanOutput)
}

func (i ApplicationSpecRolloutplanArgs) ToApplicationSpecRolloutplanPtrOutput() ApplicationSpecRolloutplanPtrOutput {
	return i.ToApplicationSpecRolloutplanPtrOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanArgs) ToApplicationSpecRolloutplanPtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanOutput).ToApplicationSpecRolloutplanPtrOutputWithContext(ctx)
}

// ApplicationSpecRolloutplanPtrInput is an input type that accepts ApplicationSpecRolloutplanArgs, ApplicationSpecRolloutplanPtr and ApplicationSpecRolloutplanPtrOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanPtrInput` via:
//
//	        ApplicationSpecRolloutplanArgs{...}
//
//	or:
//
//	        nil
type ApplicationSpecRolloutplanPtrInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanPtrOutput() ApplicationSpecRolloutplanPtrOutput
	ToApplicationSpecRolloutplanPtrOutputWithContext(context.Context) ApplicationSpecRolloutplanPtrOutput
}

type applicationSpecRolloutplanPtrType ApplicationSpecRolloutplanArgs

func ApplicationSpecRolloutplanPtr(v *ApplicationSpecRolloutplanArgs) ApplicationSpecRolloutplanPtrInput {
	return (*applicationSpecRolloutplanPtrType)(v)
}

func (*applicationSpecRolloutplanPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecRolloutplan)(nil)).Elem()
}

func (i *applicationSpecRolloutplanPtrType) ToApplicationSpecRolloutplanPtrOutput() ApplicationSpecRolloutplanPtrOutput {
	return i.ToApplicationSpecRolloutplanPtrOutputWithContext(context.Background())
}

func (i *applicationSpecRolloutplanPtrType) ToApplicationSpecRolloutplanPtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanPtrOutput)
}

// RolloutPlan is the details on how to rollout the resources The controller simply replace the old resources with the new one if there is no rollout plan involved
type ApplicationSpecRolloutplanOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplan)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanOutput) ToApplicationSpecRolloutplanOutput() ApplicationSpecRolloutplanOutput {
	return o
}

func (o ApplicationSpecRolloutplanOutput) ToApplicationSpecRolloutplanOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanOutput {
	return o
}

func (o ApplicationSpecRolloutplanOutput) ToApplicationSpecRolloutplanPtrOutput() ApplicationSpecRolloutplanPtrOutput {
	return o.ToApplicationSpecRolloutplanPtrOutputWithContext(context.Background())
}

func (o ApplicationSpecRolloutplanOutput) ToApplicationSpecRolloutplanPtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationSpecRolloutplan) *ApplicationSpecRolloutplan {
		return &v
	}).(ApplicationSpecRolloutplanPtrOutput)
}

// All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches
func (o ApplicationSpecRolloutplanOutput) BatchPartition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplan) *int { return v.BatchPartition }).(pulumi.IntPtrOutput)
}

// CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process
func (o ApplicationSpecRolloutplanOutput) CanaryMetric() ApplicationSpecRolloutplanCanarymetricArrayOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplan) []ApplicationSpecRolloutplanCanarymetric { return v.CanaryMetric }).(ApplicationSpecRolloutplanCanarymetricArrayOutput)
}

// The number of batches, default = 1
func (o ApplicationSpecRolloutplanOutput) NumBatches() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplan) *int { return v.NumBatches }).(pulumi.IntPtrOutput)
}

// Paused the rollout, default is false
func (o ApplicationSpecRolloutplanOutput) Paused() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplan) *bool { return v.Paused }).(pulumi.BoolPtrOutput)
}

// The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty
func (o ApplicationSpecRolloutplanOutput) RolloutBatches() ApplicationSpecRolloutplanRolloutbatchesArrayOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplan) []ApplicationSpecRolloutplanRolloutbatches { return v.RolloutBatches }).(ApplicationSpecRolloutplanRolloutbatchesArrayOutput)
}

// RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType
func (o ApplicationSpecRolloutplanOutput) RolloutStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplan) *string { return v.RolloutStrategy }).(pulumi.StringPtrOutput)
}

// RolloutWebhooks provide a way for the rollout to interact with an external process
func (o ApplicationSpecRolloutplanOutput) RolloutWebhooks() ApplicationSpecRolloutplanRolloutwebhooksArrayOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplan) []ApplicationSpecRolloutplanRolloutwebhooks {
		return v.RolloutWebhooks
	}).(ApplicationSpecRolloutplanRolloutwebhooksArrayOutput)
}

// The size of the target resource. The default is the same as the size of the source resource.
func (o ApplicationSpecRolloutplanOutput) TargetSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplan) *int { return v.TargetSize }).(pulumi.IntPtrOutput)
}

type ApplicationSpecRolloutplanPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecRolloutplan)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanPtrOutput) ToApplicationSpecRolloutplanPtrOutput() ApplicationSpecRolloutplanPtrOutput {
	return o
}

func (o ApplicationSpecRolloutplanPtrOutput) ToApplicationSpecRolloutplanPtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanPtrOutput {
	return o
}

func (o ApplicationSpecRolloutplanPtrOutput) Elem() ApplicationSpecRolloutplanOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplan) ApplicationSpecRolloutplan {
		if v != nil {
			return *v
		}
		var ret ApplicationSpecRolloutplan
		return ret
	}).(ApplicationSpecRolloutplanOutput)
}

// All pods in the batches up to the batchPartition (included) will have the target resource specification while the rest still have the source resource This is designed for the operators to manually rollout Default is the the number of batches which will rollout all the batches
func (o ApplicationSpecRolloutplanPtrOutput) BatchPartition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplan) *int {
		if v == nil {
			return nil
		}
		return v.BatchPartition
	}).(pulumi.IntPtrOutput)
}

// CanaryMetric provides a way for the rollout process to automatically check certain metrics before complete the process
func (o ApplicationSpecRolloutplanPtrOutput) CanaryMetric() ApplicationSpecRolloutplanCanarymetricArrayOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplan) []ApplicationSpecRolloutplanCanarymetric {
		if v == nil {
			return nil
		}
		return v.CanaryMetric
	}).(ApplicationSpecRolloutplanCanarymetricArrayOutput)
}

// The number of batches, default = 1
func (o ApplicationSpecRolloutplanPtrOutput) NumBatches() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplan) *int {
		if v == nil {
			return nil
		}
		return v.NumBatches
	}).(pulumi.IntPtrOutput)
}

// Paused the rollout, default is false
func (o ApplicationSpecRolloutplanPtrOutput) Paused() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplan) *bool {
		if v == nil {
			return nil
		}
		return v.Paused
	}).(pulumi.BoolPtrOutput)
}

// The exact distribution among batches. its size has to be exactly the same as the NumBatches (if set) The total number cannot exceed the targetSize or the size of the source resource We will IGNORE the last batch's replica field if it's a percentage since round errors can lead to inaccurate sum We highly recommend to leave the last batch's replica field empty
func (o ApplicationSpecRolloutplanPtrOutput) RolloutBatches() ApplicationSpecRolloutplanRolloutbatchesArrayOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplan) []ApplicationSpecRolloutplanRolloutbatches {
		if v == nil {
			return nil
		}
		return v.RolloutBatches
	}).(ApplicationSpecRolloutplanRolloutbatchesArrayOutput)
}

// RolloutStrategy defines strategies for the rollout plan The default is IncreaseFirstRolloutStrategyType
func (o ApplicationSpecRolloutplanPtrOutput) RolloutStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplan) *string {
		if v == nil {
			return nil
		}
		return v.RolloutStrategy
	}).(pulumi.StringPtrOutput)
}

// RolloutWebhooks provide a way for the rollout to interact with an external process
func (o ApplicationSpecRolloutplanPtrOutput) RolloutWebhooks() ApplicationSpecRolloutplanRolloutwebhooksArrayOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplan) []ApplicationSpecRolloutplanRolloutwebhooks {
		if v == nil {
			return nil
		}
		return v.RolloutWebhooks
	}).(ApplicationSpecRolloutplanRolloutwebhooksArrayOutput)
}

// The size of the target resource. The default is the same as the size of the source resource.
func (o ApplicationSpecRolloutplanPtrOutput) TargetSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplan) *int {
		if v == nil {
			return nil
		}
		return v.TargetSize
	}).(pulumi.IntPtrOutput)
}

// CanaryMetric holds the reference to metrics used for canary analysis
type ApplicationSpecRolloutplanCanarymetric struct {
	// Interval represents the windows size
	Interval *string `pulumi:"interval"`
	// Range value accepted for this metric
	MetricsRange *ApplicationSpecRolloutplanCanarymetricMetricsrange `pulumi:"metricsRange"`
	// Name of the metric
	Name string `pulumi:"name"`
	// TemplateRef references a metric template object
	TemplateRef *ApplicationSpecRolloutplanCanarymetricTemplateref `pulumi:"templateRef"`
}

// ApplicationSpecRolloutplanCanarymetricInput is an input type that accepts ApplicationSpecRolloutplanCanarymetricArgs and ApplicationSpecRolloutplanCanarymetricOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanCanarymetricInput` via:
//
//	ApplicationSpecRolloutplanCanarymetricArgs{...}
type ApplicationSpecRolloutplanCanarymetricInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanCanarymetricOutput() ApplicationSpecRolloutplanCanarymetricOutput
	ToApplicationSpecRolloutplanCanarymetricOutputWithContext(context.Context) ApplicationSpecRolloutplanCanarymetricOutput
}

// CanaryMetric holds the reference to metrics used for canary analysis
type ApplicationSpecRolloutplanCanarymetricArgs struct {
	// Interval represents the windows size
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Range value accepted for this metric
	MetricsRange ApplicationSpecRolloutplanCanarymetricMetricsrangePtrInput `pulumi:"metricsRange"`
	// Name of the metric
	Name pulumi.StringInput `pulumi:"name"`
	// TemplateRef references a metric template object
	TemplateRef ApplicationSpecRolloutplanCanarymetricTemplaterefPtrInput `pulumi:"templateRef"`
}

func (ApplicationSpecRolloutplanCanarymetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanCanarymetric)(nil)).Elem()
}

func (i ApplicationSpecRolloutplanCanarymetricArgs) ToApplicationSpecRolloutplanCanarymetricOutput() ApplicationSpecRolloutplanCanarymetricOutput {
	return i.ToApplicationSpecRolloutplanCanarymetricOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanCanarymetricArgs) ToApplicationSpecRolloutplanCanarymetricOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanCanarymetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanCanarymetricOutput)
}

// ApplicationSpecRolloutplanCanarymetricArrayInput is an input type that accepts ApplicationSpecRolloutplanCanarymetricArray and ApplicationSpecRolloutplanCanarymetricArrayOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanCanarymetricArrayInput` via:
//
//	ApplicationSpecRolloutplanCanarymetricArray{ ApplicationSpecRolloutplanCanarymetricArgs{...} }
type ApplicationSpecRolloutplanCanarymetricArrayInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanCanarymetricArrayOutput() ApplicationSpecRolloutplanCanarymetricArrayOutput
	ToApplicationSpecRolloutplanCanarymetricArrayOutputWithContext(context.Context) ApplicationSpecRolloutplanCanarymetricArrayOutput
}

type ApplicationSpecRolloutplanCanarymetricArray []ApplicationSpecRolloutplanCanarymetricInput

func (ApplicationSpecRolloutplanCanarymetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecRolloutplanCanarymetric)(nil)).Elem()
}

func (i ApplicationSpecRolloutplanCanarymetricArray) ToApplicationSpecRolloutplanCanarymetricArrayOutput() ApplicationSpecRolloutplanCanarymetricArrayOutput {
	return i.ToApplicationSpecRolloutplanCanarymetricArrayOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanCanarymetricArray) ToApplicationSpecRolloutplanCanarymetricArrayOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanCanarymetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanCanarymetricArrayOutput)
}

// CanaryMetric holds the reference to metrics used for canary analysis
type ApplicationSpecRolloutplanCanarymetricOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanCanarymetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanCanarymetric)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanCanarymetricOutput) ToApplicationSpecRolloutplanCanarymetricOutput() ApplicationSpecRolloutplanCanarymetricOutput {
	return o
}

func (o ApplicationSpecRolloutplanCanarymetricOutput) ToApplicationSpecRolloutplanCanarymetricOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanCanarymetricOutput {
	return o
}

// Interval represents the windows size
func (o ApplicationSpecRolloutplanCanarymetricOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanCanarymetric) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Range value accepted for this metric
func (o ApplicationSpecRolloutplanCanarymetricOutput) MetricsRange() ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanCanarymetric) *ApplicationSpecRolloutplanCanarymetricMetricsrange {
		return v.MetricsRange
	}).(ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput)
}

// Name of the metric
func (o ApplicationSpecRolloutplanCanarymetricOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanCanarymetric) string { return v.Name }).(pulumi.StringOutput)
}

// TemplateRef references a metric template object
func (o ApplicationSpecRolloutplanCanarymetricOutput) TemplateRef() ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanCanarymetric) *ApplicationSpecRolloutplanCanarymetricTemplateref {
		return v.TemplateRef
	}).(ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput)
}

type ApplicationSpecRolloutplanCanarymetricArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanCanarymetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecRolloutplanCanarymetric)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanCanarymetricArrayOutput) ToApplicationSpecRolloutplanCanarymetricArrayOutput() ApplicationSpecRolloutplanCanarymetricArrayOutput {
	return o
}

func (o ApplicationSpecRolloutplanCanarymetricArrayOutput) ToApplicationSpecRolloutplanCanarymetricArrayOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanCanarymetricArrayOutput {
	return o
}

func (o ApplicationSpecRolloutplanCanarymetricArrayOutput) Index(i pulumi.IntInput) ApplicationSpecRolloutplanCanarymetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSpecRolloutplanCanarymetric {
		return vs[0].([]ApplicationSpecRolloutplanCanarymetric)[vs[1].(int)]
	}).(ApplicationSpecRolloutplanCanarymetricOutput)
}

// Range value accepted for this metric
type ApplicationSpecRolloutplanCanarymetricMetricsrange struct {
	// Maximum value
	Max interface{} `pulumi:"max"`
	// Minimum value
	Min interface{} `pulumi:"min"`
}

// ApplicationSpecRolloutplanCanarymetricMetricsrangeInput is an input type that accepts ApplicationSpecRolloutplanCanarymetricMetricsrangeArgs and ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanCanarymetricMetricsrangeInput` via:
//
//	ApplicationSpecRolloutplanCanarymetricMetricsrangeArgs{...}
type ApplicationSpecRolloutplanCanarymetricMetricsrangeInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanCanarymetricMetricsrangeOutput() ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput
	ToApplicationSpecRolloutplanCanarymetricMetricsrangeOutputWithContext(context.Context) ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput
}

// Range value accepted for this metric
type ApplicationSpecRolloutplanCanarymetricMetricsrangeArgs struct {
	// Maximum value
	Max pulumi.Input `pulumi:"max"`
	// Minimum value
	Min pulumi.Input `pulumi:"min"`
}

func (ApplicationSpecRolloutplanCanarymetricMetricsrangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanCanarymetricMetricsrange)(nil)).Elem()
}

func (i ApplicationSpecRolloutplanCanarymetricMetricsrangeArgs) ToApplicationSpecRolloutplanCanarymetricMetricsrangeOutput() ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput {
	return i.ToApplicationSpecRolloutplanCanarymetricMetricsrangeOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanCanarymetricMetricsrangeArgs) ToApplicationSpecRolloutplanCanarymetricMetricsrangeOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput)
}

func (i ApplicationSpecRolloutplanCanarymetricMetricsrangeArgs) ToApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput() ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput {
	return i.ToApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanCanarymetricMetricsrangeArgs) ToApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput).ToApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutputWithContext(ctx)
}

// ApplicationSpecRolloutplanCanarymetricMetricsrangePtrInput is an input type that accepts ApplicationSpecRolloutplanCanarymetricMetricsrangeArgs, ApplicationSpecRolloutplanCanarymetricMetricsrangePtr and ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanCanarymetricMetricsrangePtrInput` via:
//
//	        ApplicationSpecRolloutplanCanarymetricMetricsrangeArgs{...}
//
//	or:
//
//	        nil
type ApplicationSpecRolloutplanCanarymetricMetricsrangePtrInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput() ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput
	ToApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutputWithContext(context.Context) ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput
}

type applicationSpecRolloutplanCanarymetricMetricsrangePtrType ApplicationSpecRolloutplanCanarymetricMetricsrangeArgs

func ApplicationSpecRolloutplanCanarymetricMetricsrangePtr(v *ApplicationSpecRolloutplanCanarymetricMetricsrangeArgs) ApplicationSpecRolloutplanCanarymetricMetricsrangePtrInput {
	return (*applicationSpecRolloutplanCanarymetricMetricsrangePtrType)(v)
}

func (*applicationSpecRolloutplanCanarymetricMetricsrangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecRolloutplanCanarymetricMetricsrange)(nil)).Elem()
}

func (i *applicationSpecRolloutplanCanarymetricMetricsrangePtrType) ToApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput() ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput {
	return i.ToApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutputWithContext(context.Background())
}

func (i *applicationSpecRolloutplanCanarymetricMetricsrangePtrType) ToApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput)
}

// Range value accepted for this metric
type ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanCanarymetricMetricsrange)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput) ToApplicationSpecRolloutplanCanarymetricMetricsrangeOutput() ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput {
	return o
}

func (o ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput) ToApplicationSpecRolloutplanCanarymetricMetricsrangeOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput {
	return o
}

func (o ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput) ToApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput() ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput {
	return o.ToApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutputWithContext(context.Background())
}

func (o ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput) ToApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationSpecRolloutplanCanarymetricMetricsrange) *ApplicationSpecRolloutplanCanarymetricMetricsrange {
		return &v
	}).(ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput)
}

// Maximum value
func (o ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput) Max() pulumi.AnyOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanCanarymetricMetricsrange) interface{} { return v.Max }).(pulumi.AnyOutput)
}

// Minimum value
func (o ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput) Min() pulumi.AnyOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanCanarymetricMetricsrange) interface{} { return v.Min }).(pulumi.AnyOutput)
}

type ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecRolloutplanCanarymetricMetricsrange)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput) ToApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput() ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput {
	return o
}

func (o ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput) ToApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput {
	return o
}

func (o ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput) Elem() ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanCanarymetricMetricsrange) ApplicationSpecRolloutplanCanarymetricMetricsrange {
		if v != nil {
			return *v
		}
		var ret ApplicationSpecRolloutplanCanarymetricMetricsrange
		return ret
	}).(ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput)
}

// Maximum value
func (o ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput) Max() pulumi.AnyOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanCanarymetricMetricsrange) interface{} {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.AnyOutput)
}

// Minimum value
func (o ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput) Min() pulumi.AnyOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanCanarymetricMetricsrange) interface{} {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.AnyOutput)
}

// TemplateRef references a metric template object
type ApplicationSpecRolloutplanCanarymetricTemplateref struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ApplicationSpecRolloutplanCanarymetricTemplaterefInput is an input type that accepts ApplicationSpecRolloutplanCanarymetricTemplaterefArgs and ApplicationSpecRolloutplanCanarymetricTemplaterefOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanCanarymetricTemplaterefInput` via:
//
//	ApplicationSpecRolloutplanCanarymetricTemplaterefArgs{...}
type ApplicationSpecRolloutplanCanarymetricTemplaterefInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanCanarymetricTemplaterefOutput() ApplicationSpecRolloutplanCanarymetricTemplaterefOutput
	ToApplicationSpecRolloutplanCanarymetricTemplaterefOutputWithContext(context.Context) ApplicationSpecRolloutplanCanarymetricTemplaterefOutput
}

// TemplateRef references a metric template object
type ApplicationSpecRolloutplanCanarymetricTemplaterefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ApplicationSpecRolloutplanCanarymetricTemplaterefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanCanarymetricTemplateref)(nil)).Elem()
}

func (i ApplicationSpecRolloutplanCanarymetricTemplaterefArgs) ToApplicationSpecRolloutplanCanarymetricTemplaterefOutput() ApplicationSpecRolloutplanCanarymetricTemplaterefOutput {
	return i.ToApplicationSpecRolloutplanCanarymetricTemplaterefOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanCanarymetricTemplaterefArgs) ToApplicationSpecRolloutplanCanarymetricTemplaterefOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanCanarymetricTemplaterefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanCanarymetricTemplaterefOutput)
}

func (i ApplicationSpecRolloutplanCanarymetricTemplaterefArgs) ToApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput() ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput {
	return i.ToApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanCanarymetricTemplaterefArgs) ToApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanCanarymetricTemplaterefOutput).ToApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutputWithContext(ctx)
}

// ApplicationSpecRolloutplanCanarymetricTemplaterefPtrInput is an input type that accepts ApplicationSpecRolloutplanCanarymetricTemplaterefArgs, ApplicationSpecRolloutplanCanarymetricTemplaterefPtr and ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanCanarymetricTemplaterefPtrInput` via:
//
//	        ApplicationSpecRolloutplanCanarymetricTemplaterefArgs{...}
//
//	or:
//
//	        nil
type ApplicationSpecRolloutplanCanarymetricTemplaterefPtrInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput() ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput
	ToApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutputWithContext(context.Context) ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput
}

type applicationSpecRolloutplanCanarymetricTemplaterefPtrType ApplicationSpecRolloutplanCanarymetricTemplaterefArgs

func ApplicationSpecRolloutplanCanarymetricTemplaterefPtr(v *ApplicationSpecRolloutplanCanarymetricTemplaterefArgs) ApplicationSpecRolloutplanCanarymetricTemplaterefPtrInput {
	return (*applicationSpecRolloutplanCanarymetricTemplaterefPtrType)(v)
}

func (*applicationSpecRolloutplanCanarymetricTemplaterefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecRolloutplanCanarymetricTemplateref)(nil)).Elem()
}

func (i *applicationSpecRolloutplanCanarymetricTemplaterefPtrType) ToApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput() ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput {
	return i.ToApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutputWithContext(context.Background())
}

func (i *applicationSpecRolloutplanCanarymetricTemplaterefPtrType) ToApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput)
}

// TemplateRef references a metric template object
type ApplicationSpecRolloutplanCanarymetricTemplaterefOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanCanarymetricTemplaterefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanCanarymetricTemplateref)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanCanarymetricTemplaterefOutput) ToApplicationSpecRolloutplanCanarymetricTemplaterefOutput() ApplicationSpecRolloutplanCanarymetricTemplaterefOutput {
	return o
}

func (o ApplicationSpecRolloutplanCanarymetricTemplaterefOutput) ToApplicationSpecRolloutplanCanarymetricTemplaterefOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanCanarymetricTemplaterefOutput {
	return o
}

func (o ApplicationSpecRolloutplanCanarymetricTemplaterefOutput) ToApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput() ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput {
	return o.ToApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutputWithContext(context.Background())
}

func (o ApplicationSpecRolloutplanCanarymetricTemplaterefOutput) ToApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationSpecRolloutplanCanarymetricTemplateref) *ApplicationSpecRolloutplanCanarymetricTemplateref {
		return &v
	}).(ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput)
}

// API version of the referent.
func (o ApplicationSpecRolloutplanCanarymetricTemplaterefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanCanarymetricTemplateref) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ApplicationSpecRolloutplanCanarymetricTemplaterefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanCanarymetricTemplateref) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ApplicationSpecRolloutplanCanarymetricTemplaterefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanCanarymetricTemplateref) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ApplicationSpecRolloutplanCanarymetricTemplaterefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanCanarymetricTemplateref) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ApplicationSpecRolloutplanCanarymetricTemplaterefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanCanarymetricTemplateref) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ApplicationSpecRolloutplanCanarymetricTemplaterefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanCanarymetricTemplateref) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ApplicationSpecRolloutplanCanarymetricTemplaterefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanCanarymetricTemplateref) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecRolloutplanCanarymetricTemplateref)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput) ToApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput() ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput {
	return o
}

func (o ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput) ToApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput {
	return o
}

func (o ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput) Elem() ApplicationSpecRolloutplanCanarymetricTemplaterefOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanCanarymetricTemplateref) ApplicationSpecRolloutplanCanarymetricTemplateref {
		if v != nil {
			return *v
		}
		var ret ApplicationSpecRolloutplanCanarymetricTemplateref
		return ret
	}).(ApplicationSpecRolloutplanCanarymetricTemplaterefOutput)
}

// API version of the referent.
func (o ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanCanarymetricTemplateref) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanCanarymetricTemplateref) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanCanarymetricTemplateref) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanCanarymetricTemplateref) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanCanarymetricTemplateref) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanCanarymetricTemplateref) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanCanarymetricTemplateref) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// RolloutBatch is used to describe how the each batch rollout should be
type ApplicationSpecRolloutplanRolloutbatches struct {
	// RolloutWebhooks provides a way for the batch rollout to interact with an external process
	BatchRolloutWebhooks []ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooks `pulumi:"batchRolloutWebhooks"`
	// CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch
	CanaryMetric []ApplicationSpecRolloutplanRolloutbatchesCanarymetric `pulumi:"canaryMetric"`
	// The wait time, in seconds, between instances upgrades, default = 0
	InstanceInterval *int `pulumi:"instanceInterval"`
	// MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0
	MaxUnavailable interface{} `pulumi:"maxUnavailable"`
	// The list of Pods to get upgraded it is mutually exclusive with the Replicas field
	PodList []string `pulumi:"podList"`
	// Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field
	Replicas interface{} `pulumi:"replicas"`
}

// ApplicationSpecRolloutplanRolloutbatchesInput is an input type that accepts ApplicationSpecRolloutplanRolloutbatchesArgs and ApplicationSpecRolloutplanRolloutbatchesOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanRolloutbatchesInput` via:
//
//	ApplicationSpecRolloutplanRolloutbatchesArgs{...}
type ApplicationSpecRolloutplanRolloutbatchesInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanRolloutbatchesOutput() ApplicationSpecRolloutplanRolloutbatchesOutput
	ToApplicationSpecRolloutplanRolloutbatchesOutputWithContext(context.Context) ApplicationSpecRolloutplanRolloutbatchesOutput
}

// RolloutBatch is used to describe how the each batch rollout should be
type ApplicationSpecRolloutplanRolloutbatchesArgs struct {
	// RolloutWebhooks provides a way for the batch rollout to interact with an external process
	BatchRolloutWebhooks ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayInput `pulumi:"batchRolloutWebhooks"`
	// CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch
	CanaryMetric ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayInput `pulumi:"canaryMetric"`
	// The wait time, in seconds, between instances upgrades, default = 0
	InstanceInterval pulumi.IntPtrInput `pulumi:"instanceInterval"`
	// MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0
	MaxUnavailable pulumi.Input `pulumi:"maxUnavailable"`
	// The list of Pods to get upgraded it is mutually exclusive with the Replicas field
	PodList pulumi.StringArrayInput `pulumi:"podList"`
	// Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field
	Replicas pulumi.Input `pulumi:"replicas"`
}

func (ApplicationSpecRolloutplanRolloutbatchesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatches)(nil)).Elem()
}

func (i ApplicationSpecRolloutplanRolloutbatchesArgs) ToApplicationSpecRolloutplanRolloutbatchesOutput() ApplicationSpecRolloutplanRolloutbatchesOutput {
	return i.ToApplicationSpecRolloutplanRolloutbatchesOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanRolloutbatchesArgs) ToApplicationSpecRolloutplanRolloutbatchesOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanRolloutbatchesOutput)
}

// ApplicationSpecRolloutplanRolloutbatchesArrayInput is an input type that accepts ApplicationSpecRolloutplanRolloutbatchesArray and ApplicationSpecRolloutplanRolloutbatchesArrayOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanRolloutbatchesArrayInput` via:
//
//	ApplicationSpecRolloutplanRolloutbatchesArray{ ApplicationSpecRolloutplanRolloutbatchesArgs{...} }
type ApplicationSpecRolloutplanRolloutbatchesArrayInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanRolloutbatchesArrayOutput() ApplicationSpecRolloutplanRolloutbatchesArrayOutput
	ToApplicationSpecRolloutplanRolloutbatchesArrayOutputWithContext(context.Context) ApplicationSpecRolloutplanRolloutbatchesArrayOutput
}

type ApplicationSpecRolloutplanRolloutbatchesArray []ApplicationSpecRolloutplanRolloutbatchesInput

func (ApplicationSpecRolloutplanRolloutbatchesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecRolloutplanRolloutbatches)(nil)).Elem()
}

func (i ApplicationSpecRolloutplanRolloutbatchesArray) ToApplicationSpecRolloutplanRolloutbatchesArrayOutput() ApplicationSpecRolloutplanRolloutbatchesArrayOutput {
	return i.ToApplicationSpecRolloutplanRolloutbatchesArrayOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanRolloutbatchesArray) ToApplicationSpecRolloutplanRolloutbatchesArrayOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanRolloutbatchesArrayOutput)
}

// RolloutBatch is used to describe how the each batch rollout should be
type ApplicationSpecRolloutplanRolloutbatchesOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanRolloutbatchesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatches)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanRolloutbatchesOutput) ToApplicationSpecRolloutplanRolloutbatchesOutput() ApplicationSpecRolloutplanRolloutbatchesOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesOutput) ToApplicationSpecRolloutplanRolloutbatchesOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesOutput {
	return o
}

// RolloutWebhooks provides a way for the batch rollout to interact with an external process
func (o ApplicationSpecRolloutplanRolloutbatchesOutput) BatchRolloutWebhooks() ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatches) []ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooks {
		return v.BatchRolloutWebhooks
	}).(ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput)
}

// CanaryMetric provides a way for the batch rollout process to automatically check certain metrics before moving to the next batch
func (o ApplicationSpecRolloutplanRolloutbatchesOutput) CanaryMetric() ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatches) []ApplicationSpecRolloutplanRolloutbatchesCanarymetric {
		return v.CanaryMetric
	}).(ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput)
}

// The wait time, in seconds, between instances upgrades, default = 0
func (o ApplicationSpecRolloutplanRolloutbatchesOutput) InstanceInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatches) *int { return v.InstanceInterval }).(pulumi.IntPtrOutput)
}

// MaxUnavailable is the max allowed number of pods that is unavailable during the upgrade. We will mark the batch as ready as long as there are less or equal number of pods unavailable than this number. default = 0
func (o ApplicationSpecRolloutplanRolloutbatchesOutput) MaxUnavailable() pulumi.AnyOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatches) interface{} { return v.MaxUnavailable }).(pulumi.AnyOutput)
}

// The list of Pods to get upgraded it is mutually exclusive with the Replicas field
func (o ApplicationSpecRolloutplanRolloutbatchesOutput) PodList() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatches) []string { return v.PodList }).(pulumi.StringArrayOutput)
}

// Replicas is the number of pods to upgrade in this batch it can be an absolute number (ex: 5) or a percentage of total pods we will ignore the percentage of the last batch to just fill the gap it is mutually exclusive with the PodList field
func (o ApplicationSpecRolloutplanRolloutbatchesOutput) Replicas() pulumi.AnyOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatches) interface{} { return v.Replicas }).(pulumi.AnyOutput)
}

type ApplicationSpecRolloutplanRolloutbatchesArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanRolloutbatchesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecRolloutplanRolloutbatches)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanRolloutbatchesArrayOutput) ToApplicationSpecRolloutplanRolloutbatchesArrayOutput() ApplicationSpecRolloutplanRolloutbatchesArrayOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesArrayOutput) ToApplicationSpecRolloutplanRolloutbatchesArrayOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesArrayOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesArrayOutput) Index(i pulumi.IntInput) ApplicationSpecRolloutplanRolloutbatchesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSpecRolloutplanRolloutbatches {
		return vs[0].([]ApplicationSpecRolloutplanRolloutbatches)[vs[1].(int)]
	}).(ApplicationSpecRolloutplanRolloutbatchesOutput)
}

// RolloutWebhook holds the reference to external checks used for canary analysis
type ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooks struct {
	// ExpectedStatus contains all the expected http status code that we will accept as success
	ExpectedStatus []int `pulumi:"expectedStatus"`
	// Metadata (key-value pairs) for this webhook
	Metadata map[string]string `pulumi:"metadata"`
	// Method the HTTP call method, default is POST
	Method *string `pulumi:"method"`
	// Name of this webhook
	Name string `pulumi:"name"`
	// Type of this webhook
	Type string `pulumi:"type"`
	// URL address of this webhook
	Url string `pulumi:"url"`
}

// ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksInput is an input type that accepts ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArgs and ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksInput` via:
//
//	ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArgs{...}
type ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput() ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput
	ToApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutputWithContext(context.Context) ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput
}

// RolloutWebhook holds the reference to external checks used for canary analysis
type ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArgs struct {
	// ExpectedStatus contains all the expected http status code that we will accept as success
	ExpectedStatus pulumi.IntArrayInput `pulumi:"expectedStatus"`
	// Metadata (key-value pairs) for this webhook
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Method the HTTP call method, default is POST
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Name of this webhook
	Name pulumi.StringInput `pulumi:"name"`
	// Type of this webhook
	Type pulumi.StringInput `pulumi:"type"`
	// URL address of this webhook
	Url pulumi.StringInput `pulumi:"url"`
}

func (ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooks)(nil)).Elem()
}

func (i ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArgs) ToApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput() ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput {
	return i.ToApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArgs) ToApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput)
}

// ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayInput is an input type that accepts ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArray and ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayInput` via:
//
//	ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArray{ ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArgs{...} }
type ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput() ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput
	ToApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutputWithContext(context.Context) ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput
}

type ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArray []ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksInput

func (ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooks)(nil)).Elem()
}

func (i ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArray) ToApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput() ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput {
	return i.ToApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArray) ToApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput)
}

// RolloutWebhook holds the reference to external checks used for canary analysis
type ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooks)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput) ToApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput() ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput) ToApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput {
	return o
}

// ExpectedStatus contains all the expected http status code that we will accept as success
func (o ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput) ExpectedStatus() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooks) []int { return v.ExpectedStatus }).(pulumi.IntArrayOutput)
}

// Metadata (key-value pairs) for this webhook
func (o ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooks) map[string]string {
		return v.Metadata
	}).(pulumi.StringMapOutput)
}

// Method the HTTP call method, default is POST
func (o ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooks) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Name of this webhook
func (o ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooks) string { return v.Name }).(pulumi.StringOutput)
}

// Type of this webhook
func (o ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooks) string { return v.Type }).(pulumi.StringOutput)
}

// URL address of this webhook
func (o ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooks) string { return v.Url }).(pulumi.StringOutput)
}

type ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooks)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput) ToApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput() ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput) ToApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput) Index(i pulumi.IntInput) ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooks {
		return vs[0].([]ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooks)[vs[1].(int)]
	}).(ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput)
}

// Metadata (key-value pairs) for this webhook
type ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksMetadata struct {
}

// CanaryMetric holds the reference to metrics used for canary analysis
type ApplicationSpecRolloutplanRolloutbatchesCanarymetric struct {
	// Interval represents the windows size
	Interval *string `pulumi:"interval"`
	// Range value accepted for this metric
	MetricsRange *ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrange `pulumi:"metricsRange"`
	// Name of the metric
	Name string `pulumi:"name"`
	// TemplateRef references a metric template object
	TemplateRef *ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref `pulumi:"templateRef"`
}

// ApplicationSpecRolloutplanRolloutbatchesCanarymetricInput is an input type that accepts ApplicationSpecRolloutplanRolloutbatchesCanarymetricArgs and ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanRolloutbatchesCanarymetricInput` via:
//
//	ApplicationSpecRolloutplanRolloutbatchesCanarymetricArgs{...}
type ApplicationSpecRolloutplanRolloutbatchesCanarymetricInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput
	ToApplicationSpecRolloutplanRolloutbatchesCanarymetricOutputWithContext(context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput
}

// CanaryMetric holds the reference to metrics used for canary analysis
type ApplicationSpecRolloutplanRolloutbatchesCanarymetricArgs struct {
	// Interval represents the windows size
	Interval pulumi.StringPtrInput `pulumi:"interval"`
	// Range value accepted for this metric
	MetricsRange ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrInput `pulumi:"metricsRange"`
	// Name of the metric
	Name pulumi.StringInput `pulumi:"name"`
	// TemplateRef references a metric template object
	TemplateRef ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrInput `pulumi:"templateRef"`
}

func (ApplicationSpecRolloutplanRolloutbatchesCanarymetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesCanarymetric)(nil)).Elem()
}

func (i ApplicationSpecRolloutplanRolloutbatchesCanarymetricArgs) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput {
	return i.ToApplicationSpecRolloutplanRolloutbatchesCanarymetricOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanRolloutbatchesCanarymetricArgs) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput)
}

// ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayInput is an input type that accepts ApplicationSpecRolloutplanRolloutbatchesCanarymetricArray and ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayInput` via:
//
//	ApplicationSpecRolloutplanRolloutbatchesCanarymetricArray{ ApplicationSpecRolloutplanRolloutbatchesCanarymetricArgs{...} }
type ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput
	ToApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutputWithContext(context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput
}

type ApplicationSpecRolloutplanRolloutbatchesCanarymetricArray []ApplicationSpecRolloutplanRolloutbatchesCanarymetricInput

func (ApplicationSpecRolloutplanRolloutbatchesCanarymetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecRolloutplanRolloutbatchesCanarymetric)(nil)).Elem()
}

func (i ApplicationSpecRolloutplanRolloutbatchesCanarymetricArray) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput {
	return i.ToApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanRolloutbatchesCanarymetricArray) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput)
}

// CanaryMetric holds the reference to metrics used for canary analysis
type ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesCanarymetric)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput {
	return o
}

// Interval represents the windows size
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput) Interval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesCanarymetric) *string { return v.Interval }).(pulumi.StringPtrOutput)
}

// Range value accepted for this metric
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput) MetricsRange() ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesCanarymetric) *ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrange {
		return v.MetricsRange
	}).(ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput)
}

// Name of the metric
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesCanarymetric) string { return v.Name }).(pulumi.StringOutput)
}

// TemplateRef references a metric template object
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput) TemplateRef() ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesCanarymetric) *ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref {
		return v.TemplateRef
	}).(ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput)
}

type ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecRolloutplanRolloutbatchesCanarymetric)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput) Index(i pulumi.IntInput) ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSpecRolloutplanRolloutbatchesCanarymetric {
		return vs[0].([]ApplicationSpecRolloutplanRolloutbatchesCanarymetric)[vs[1].(int)]
	}).(ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput)
}

// Range value accepted for this metric
type ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrange struct {
	// Maximum value
	Max interface{} `pulumi:"max"`
	// Minimum value
	Min interface{} `pulumi:"min"`
}

// ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeInput is an input type that accepts ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeArgs and ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeInput` via:
//
//	ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeArgs{...}
type ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput
	ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutputWithContext(context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput
}

// Range value accepted for this metric
type ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeArgs struct {
	// Maximum value
	Max pulumi.Input `pulumi:"max"`
	// Minimum value
	Min pulumi.Input `pulumi:"min"`
}

func (ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrange)(nil)).Elem()
}

func (i ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeArgs) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput {
	return i.ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeArgs) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput)
}

func (i ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeArgs) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput {
	return i.ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeArgs) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput).ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutputWithContext(ctx)
}

// ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrInput is an input type that accepts ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeArgs, ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtr and ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrInput` via:
//
//	        ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeArgs{...}
//
//	or:
//
//	        nil
type ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput
	ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutputWithContext(context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput
}

type applicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrType ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeArgs

func ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtr(v *ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeArgs) ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrInput {
	return (*applicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrType)(v)
}

func (*applicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrange)(nil)).Elem()
}

func (i *applicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrType) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput {
	return i.ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutputWithContext(context.Background())
}

func (i *applicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrType) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput)
}

// Range value accepted for this metric
type ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrange)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput {
	return o.ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutputWithContext(context.Background())
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrange) *ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrange {
		return &v
	}).(ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput)
}

// Maximum value
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput) Max() pulumi.AnyOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrange) interface{} { return v.Max }).(pulumi.AnyOutput)
}

// Minimum value
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput) Min() pulumi.AnyOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrange) interface{} { return v.Min }).(pulumi.AnyOutput)
}

type ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrange)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput) Elem() ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrange) ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrange {
		if v != nil {
			return *v
		}
		var ret ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrange
		return ret
	}).(ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput)
}

// Maximum value
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput) Max() pulumi.AnyOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrange) interface{} {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.AnyOutput)
}

// Minimum value
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput) Min() pulumi.AnyOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrange) interface{} {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.AnyOutput)
}

// TemplateRef references a metric template object
type ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefInput is an input type that accepts ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefArgs and ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefInput` via:
//
//	ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefArgs{...}
type ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput
	ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutputWithContext(context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput
}

// TemplateRef references a metric template object
type ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref)(nil)).Elem()
}

func (i ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefArgs) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput {
	return i.ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefArgs) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput)
}

func (i ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefArgs) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput {
	return i.ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefArgs) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput).ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutputWithContext(ctx)
}

// ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrInput is an input type that accepts ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefArgs, ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtr and ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrInput` via:
//
//	        ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefArgs{...}
//
//	or:
//
//	        nil
type ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput
	ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutputWithContext(context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput
}

type applicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrType ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefArgs

func ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtr(v *ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefArgs) ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrInput {
	return (*applicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrType)(v)
}

func (*applicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref)(nil)).Elem()
}

func (i *applicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrType) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput {
	return i.ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutputWithContext(context.Background())
}

func (i *applicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrType) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput)
}

// TemplateRef references a metric template object
type ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput {
	return o.ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutputWithContext(context.Background())
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref) *ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref {
		return &v
	}).(ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput)
}

// API version of the referent.
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref) *string {
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput() ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput) ToApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput) Elem() ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref) ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref {
		if v != nil {
			return *v
		}
		var ret ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref
		return ret
	}).(ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput)
}

// API version of the referent.
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplateref) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// RolloutWebhook holds the reference to external checks used for canary analysis
type ApplicationSpecRolloutplanRolloutwebhooks struct {
	// ExpectedStatus contains all the expected http status code that we will accept as success
	ExpectedStatus []int `pulumi:"expectedStatus"`
	// Metadata (key-value pairs) for this webhook
	Metadata map[string]string `pulumi:"metadata"`
	// Method the HTTP call method, default is POST
	Method *string `pulumi:"method"`
	// Name of this webhook
	Name string `pulumi:"name"`
	// Type of this webhook
	Type string `pulumi:"type"`
	// URL address of this webhook
	Url string `pulumi:"url"`
}

// ApplicationSpecRolloutplanRolloutwebhooksInput is an input type that accepts ApplicationSpecRolloutplanRolloutwebhooksArgs and ApplicationSpecRolloutplanRolloutwebhooksOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanRolloutwebhooksInput` via:
//
//	ApplicationSpecRolloutplanRolloutwebhooksArgs{...}
type ApplicationSpecRolloutplanRolloutwebhooksInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanRolloutwebhooksOutput() ApplicationSpecRolloutplanRolloutwebhooksOutput
	ToApplicationSpecRolloutplanRolloutwebhooksOutputWithContext(context.Context) ApplicationSpecRolloutplanRolloutwebhooksOutput
}

// RolloutWebhook holds the reference to external checks used for canary analysis
type ApplicationSpecRolloutplanRolloutwebhooksArgs struct {
	// ExpectedStatus contains all the expected http status code that we will accept as success
	ExpectedStatus pulumi.IntArrayInput `pulumi:"expectedStatus"`
	// Metadata (key-value pairs) for this webhook
	Metadata pulumi.StringMapInput `pulumi:"metadata"`
	// Method the HTTP call method, default is POST
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Name of this webhook
	Name pulumi.StringInput `pulumi:"name"`
	// Type of this webhook
	Type pulumi.StringInput `pulumi:"type"`
	// URL address of this webhook
	Url pulumi.StringInput `pulumi:"url"`
}

func (ApplicationSpecRolloutplanRolloutwebhooksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanRolloutwebhooks)(nil)).Elem()
}

func (i ApplicationSpecRolloutplanRolloutwebhooksArgs) ToApplicationSpecRolloutplanRolloutwebhooksOutput() ApplicationSpecRolloutplanRolloutwebhooksOutput {
	return i.ToApplicationSpecRolloutplanRolloutwebhooksOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanRolloutwebhooksArgs) ToApplicationSpecRolloutplanRolloutwebhooksOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutwebhooksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanRolloutwebhooksOutput)
}

// ApplicationSpecRolloutplanRolloutwebhooksArrayInput is an input type that accepts ApplicationSpecRolloutplanRolloutwebhooksArray and ApplicationSpecRolloutplanRolloutwebhooksArrayOutput values.
// You can construct a concrete instance of `ApplicationSpecRolloutplanRolloutwebhooksArrayInput` via:
//
//	ApplicationSpecRolloutplanRolloutwebhooksArray{ ApplicationSpecRolloutplanRolloutwebhooksArgs{...} }
type ApplicationSpecRolloutplanRolloutwebhooksArrayInput interface {
	pulumi.Input

	ToApplicationSpecRolloutplanRolloutwebhooksArrayOutput() ApplicationSpecRolloutplanRolloutwebhooksArrayOutput
	ToApplicationSpecRolloutplanRolloutwebhooksArrayOutputWithContext(context.Context) ApplicationSpecRolloutplanRolloutwebhooksArrayOutput
}

type ApplicationSpecRolloutplanRolloutwebhooksArray []ApplicationSpecRolloutplanRolloutwebhooksInput

func (ApplicationSpecRolloutplanRolloutwebhooksArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecRolloutplanRolloutwebhooks)(nil)).Elem()
}

func (i ApplicationSpecRolloutplanRolloutwebhooksArray) ToApplicationSpecRolloutplanRolloutwebhooksArrayOutput() ApplicationSpecRolloutplanRolloutwebhooksArrayOutput {
	return i.ToApplicationSpecRolloutplanRolloutwebhooksArrayOutputWithContext(context.Background())
}

func (i ApplicationSpecRolloutplanRolloutwebhooksArray) ToApplicationSpecRolloutplanRolloutwebhooksArrayOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutwebhooksArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSpecRolloutplanRolloutwebhooksArrayOutput)
}

// RolloutWebhook holds the reference to external checks used for canary analysis
type ApplicationSpecRolloutplanRolloutwebhooksOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanRolloutwebhooksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSpecRolloutplanRolloutwebhooks)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanRolloutwebhooksOutput) ToApplicationSpecRolloutplanRolloutwebhooksOutput() ApplicationSpecRolloutplanRolloutwebhooksOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutwebhooksOutput) ToApplicationSpecRolloutplanRolloutwebhooksOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutwebhooksOutput {
	return o
}

// ExpectedStatus contains all the expected http status code that we will accept as success
func (o ApplicationSpecRolloutplanRolloutwebhooksOutput) ExpectedStatus() pulumi.IntArrayOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutwebhooks) []int { return v.ExpectedStatus }).(pulumi.IntArrayOutput)
}

// Metadata (key-value pairs) for this webhook
func (o ApplicationSpecRolloutplanRolloutwebhooksOutput) Metadata() pulumi.StringMapOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutwebhooks) map[string]string { return v.Metadata }).(pulumi.StringMapOutput)
}

// Method the HTTP call method, default is POST
func (o ApplicationSpecRolloutplanRolloutwebhooksOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutwebhooks) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Name of this webhook
func (o ApplicationSpecRolloutplanRolloutwebhooksOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutwebhooks) string { return v.Name }).(pulumi.StringOutput)
}

// Type of this webhook
func (o ApplicationSpecRolloutplanRolloutwebhooksOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutwebhooks) string { return v.Type }).(pulumi.StringOutput)
}

// URL address of this webhook
func (o ApplicationSpecRolloutplanRolloutwebhooksOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationSpecRolloutplanRolloutwebhooks) string { return v.Url }).(pulumi.StringOutput)
}

type ApplicationSpecRolloutplanRolloutwebhooksArrayOutput struct{ *pulumi.OutputState }

func (ApplicationSpecRolloutplanRolloutwebhooksArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationSpecRolloutplanRolloutwebhooks)(nil)).Elem()
}

func (o ApplicationSpecRolloutplanRolloutwebhooksArrayOutput) ToApplicationSpecRolloutplanRolloutwebhooksArrayOutput() ApplicationSpecRolloutplanRolloutwebhooksArrayOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutwebhooksArrayOutput) ToApplicationSpecRolloutplanRolloutwebhooksArrayOutputWithContext(ctx context.Context) ApplicationSpecRolloutplanRolloutwebhooksArrayOutput {
	return o
}

func (o ApplicationSpecRolloutplanRolloutwebhooksArrayOutput) Index(i pulumi.IntInput) ApplicationSpecRolloutplanRolloutwebhooksOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationSpecRolloutplanRolloutwebhooks {
		return vs[0].([]ApplicationSpecRolloutplanRolloutwebhooks)[vs[1].(int)]
	}).(ApplicationSpecRolloutplanRolloutwebhooksOutput)
}

// Metadata (key-value pairs) for this webhook
type ApplicationSpecRolloutplanRolloutwebhooksMetadata struct {
}

// AppStatus defines the observed state of Application
type ApplicationStatus struct {
	// AppliedResources record the resources that the  workflow step apply.
	AppliedResources []ApplicationStatusAppliedresources `pulumi:"appliedResources"`
	// Components record the related Components created by Application Controller
	Components []ApplicationStatusComponents `pulumi:"components"`
	// Conditions of the resource.
	Conditions []ApplicationStatusConditions `pulumi:"conditions"`
	// LatestRevision of the application configuration it generates
	LatestRevision *ApplicationStatusLatestrevision `pulumi:"latestRevision"`
	// The generation observed by the application controller.
	ObservedGeneration *int `pulumi:"observedGeneration"`
	// PolicyStatus records the status of policy Deprecated This field is only used by EnvBinding Policy which is deprecated.
	Policy []ApplicationStatusPolicy `pulumi:"policy"`
	// Services record the status of the application services
	Services []ApplicationStatusServices `pulumi:"services"`
	// ApplicationPhase is a label for the condition of an application at the current time
	Status *string `pulumi:"status"`
	// Workflow record the status of workflow
	Workflow *ApplicationStatusWorkflow `pulumi:"workflow"`
}

// ApplicationStatusInput is an input type that accepts ApplicationStatusArgs and ApplicationStatusOutput values.
// You can construct a concrete instance of `ApplicationStatusInput` via:
//
//	ApplicationStatusArgs{...}
type ApplicationStatusInput interface {
	pulumi.Input

	ToApplicationStatusOutput() ApplicationStatusOutput
	ToApplicationStatusOutputWithContext(context.Context) ApplicationStatusOutput
}

// AppStatus defines the observed state of Application
type ApplicationStatusArgs struct {
	// AppliedResources record the resources that the  workflow step apply.
	AppliedResources ApplicationStatusAppliedresourcesArrayInput `pulumi:"appliedResources"`
	// Components record the related Components created by Application Controller
	Components ApplicationStatusComponentsArrayInput `pulumi:"components"`
	// Conditions of the resource.
	Conditions ApplicationStatusConditionsArrayInput `pulumi:"conditions"`
	// LatestRevision of the application configuration it generates
	LatestRevision ApplicationStatusLatestrevisionPtrInput `pulumi:"latestRevision"`
	// The generation observed by the application controller.
	ObservedGeneration pulumi.IntPtrInput `pulumi:"observedGeneration"`
	// PolicyStatus records the status of policy Deprecated This field is only used by EnvBinding Policy which is deprecated.
	Policy ApplicationStatusPolicyArrayInput `pulumi:"policy"`
	// Services record the status of the application services
	Services ApplicationStatusServicesArrayInput `pulumi:"services"`
	// ApplicationPhase is a label for the condition of an application at the current time
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Workflow record the status of workflow
	Workflow ApplicationStatusWorkflowPtrInput `pulumi:"workflow"`
}

func (ApplicationStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatus)(nil)).Elem()
}

func (i ApplicationStatusArgs) ToApplicationStatusOutput() ApplicationStatusOutput {
	return i.ToApplicationStatusOutputWithContext(context.Background())
}

func (i ApplicationStatusArgs) ToApplicationStatusOutputWithContext(ctx context.Context) ApplicationStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOutput)
}

func (i ApplicationStatusArgs) ToApplicationStatusPtrOutput() ApplicationStatusPtrOutput {
	return i.ToApplicationStatusPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusArgs) ToApplicationStatusPtrOutputWithContext(ctx context.Context) ApplicationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusOutput).ToApplicationStatusPtrOutputWithContext(ctx)
}

// ApplicationStatusPtrInput is an input type that accepts ApplicationStatusArgs, ApplicationStatusPtr and ApplicationStatusPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusPtrInput` via:
//
//	        ApplicationStatusArgs{...}
//
//	or:
//
//	        nil
type ApplicationStatusPtrInput interface {
	pulumi.Input

	ToApplicationStatusPtrOutput() ApplicationStatusPtrOutput
	ToApplicationStatusPtrOutputWithContext(context.Context) ApplicationStatusPtrOutput
}

type applicationStatusPtrType ApplicationStatusArgs

func ApplicationStatusPtr(v *ApplicationStatusArgs) ApplicationStatusPtrInput {
	return (*applicationStatusPtrType)(v)
}

func (*applicationStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatus)(nil)).Elem()
}

func (i *applicationStatusPtrType) ToApplicationStatusPtrOutput() ApplicationStatusPtrOutput {
	return i.ToApplicationStatusPtrOutputWithContext(context.Background())
}

func (i *applicationStatusPtrType) ToApplicationStatusPtrOutputWithContext(ctx context.Context) ApplicationStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusPtrOutput)
}

// AppStatus defines the observed state of Application
type ApplicationStatusOutput struct{ *pulumi.OutputState }

func (ApplicationStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatus)(nil)).Elem()
}

func (o ApplicationStatusOutput) ToApplicationStatusOutput() ApplicationStatusOutput {
	return o
}

func (o ApplicationStatusOutput) ToApplicationStatusOutputWithContext(ctx context.Context) ApplicationStatusOutput {
	return o
}

func (o ApplicationStatusOutput) ToApplicationStatusPtrOutput() ApplicationStatusPtrOutput {
	return o.ToApplicationStatusPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusOutput) ToApplicationStatusPtrOutputWithContext(ctx context.Context) ApplicationStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationStatus) *ApplicationStatus {
		return &v
	}).(ApplicationStatusPtrOutput)
}

// AppliedResources record the resources that the  workflow step apply.
func (o ApplicationStatusOutput) AppliedResources() ApplicationStatusAppliedresourcesArrayOutput {
	return o.ApplyT(func(v ApplicationStatus) []ApplicationStatusAppliedresources { return v.AppliedResources }).(ApplicationStatusAppliedresourcesArrayOutput)
}

// Components record the related Components created by Application Controller
func (o ApplicationStatusOutput) Components() ApplicationStatusComponentsArrayOutput {
	return o.ApplyT(func(v ApplicationStatus) []ApplicationStatusComponents { return v.Components }).(ApplicationStatusComponentsArrayOutput)
}

// Conditions of the resource.
func (o ApplicationStatusOutput) Conditions() ApplicationStatusConditionsArrayOutput {
	return o.ApplyT(func(v ApplicationStatus) []ApplicationStatusConditions { return v.Conditions }).(ApplicationStatusConditionsArrayOutput)
}

// LatestRevision of the application configuration it generates
func (o ApplicationStatusOutput) LatestRevision() ApplicationStatusLatestrevisionPtrOutput {
	return o.ApplyT(func(v ApplicationStatus) *ApplicationStatusLatestrevision { return v.LatestRevision }).(ApplicationStatusLatestrevisionPtrOutput)
}

// The generation observed by the application controller.
func (o ApplicationStatusOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApplicationStatus) *int { return v.ObservedGeneration }).(pulumi.IntPtrOutput)
}

// PolicyStatus records the status of policy Deprecated This field is only used by EnvBinding Policy which is deprecated.
func (o ApplicationStatusOutput) Policy() ApplicationStatusPolicyArrayOutput {
	return o.ApplyT(func(v ApplicationStatus) []ApplicationStatusPolicy { return v.Policy }).(ApplicationStatusPolicyArrayOutput)
}

// Services record the status of the application services
func (o ApplicationStatusOutput) Services() ApplicationStatusServicesArrayOutput {
	return o.ApplyT(func(v ApplicationStatus) []ApplicationStatusServices { return v.Services }).(ApplicationStatusServicesArrayOutput)
}

// ApplicationPhase is a label for the condition of an application at the current time
func (o ApplicationStatusOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatus) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Workflow record the status of workflow
func (o ApplicationStatusOutput) Workflow() ApplicationStatusWorkflowPtrOutput {
	return o.ApplyT(func(v ApplicationStatus) *ApplicationStatusWorkflow { return v.Workflow }).(ApplicationStatusWorkflowPtrOutput)
}

type ApplicationStatusPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatus)(nil)).Elem()
}

func (o ApplicationStatusPtrOutput) ToApplicationStatusPtrOutput() ApplicationStatusPtrOutput {
	return o
}

func (o ApplicationStatusPtrOutput) ToApplicationStatusPtrOutputWithContext(ctx context.Context) ApplicationStatusPtrOutput {
	return o
}

func (o ApplicationStatusPtrOutput) Elem() ApplicationStatusOutput {
	return o.ApplyT(func(v *ApplicationStatus) ApplicationStatus {
		if v != nil {
			return *v
		}
		var ret ApplicationStatus
		return ret
	}).(ApplicationStatusOutput)
}

// AppliedResources record the resources that the  workflow step apply.
func (o ApplicationStatusPtrOutput) AppliedResources() ApplicationStatusAppliedresourcesArrayOutput {
	return o.ApplyT(func(v *ApplicationStatus) []ApplicationStatusAppliedresources {
		if v == nil {
			return nil
		}
		return v.AppliedResources
	}).(ApplicationStatusAppliedresourcesArrayOutput)
}

// Components record the related Components created by Application Controller
func (o ApplicationStatusPtrOutput) Components() ApplicationStatusComponentsArrayOutput {
	return o.ApplyT(func(v *ApplicationStatus) []ApplicationStatusComponents {
		if v == nil {
			return nil
		}
		return v.Components
	}).(ApplicationStatusComponentsArrayOutput)
}

// Conditions of the resource.
func (o ApplicationStatusPtrOutput) Conditions() ApplicationStatusConditionsArrayOutput {
	return o.ApplyT(func(v *ApplicationStatus) []ApplicationStatusConditions {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(ApplicationStatusConditionsArrayOutput)
}

// LatestRevision of the application configuration it generates
func (o ApplicationStatusPtrOutput) LatestRevision() ApplicationStatusLatestrevisionPtrOutput {
	return o.ApplyT(func(v *ApplicationStatus) *ApplicationStatusLatestrevision {
		if v == nil {
			return nil
		}
		return v.LatestRevision
	}).(ApplicationStatusLatestrevisionPtrOutput)
}

// The generation observed by the application controller.
func (o ApplicationStatusPtrOutput) ObservedGeneration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationStatus) *int {
		if v == nil {
			return nil
		}
		return v.ObservedGeneration
	}).(pulumi.IntPtrOutput)
}

// PolicyStatus records the status of policy Deprecated This field is only used by EnvBinding Policy which is deprecated.
func (o ApplicationStatusPtrOutput) Policy() ApplicationStatusPolicyArrayOutput {
	return o.ApplyT(func(v *ApplicationStatus) []ApplicationStatusPolicy {
		if v == nil {
			return nil
		}
		return v.Policy
	}).(ApplicationStatusPolicyArrayOutput)
}

// Services record the status of the application services
func (o ApplicationStatusPtrOutput) Services() ApplicationStatusServicesArrayOutput {
	return o.ApplyT(func(v *ApplicationStatus) []ApplicationStatusServices {
		if v == nil {
			return nil
		}
		return v.Services
	}).(ApplicationStatusServicesArrayOutput)
}

// ApplicationPhase is a label for the condition of an application at the current time
func (o ApplicationStatusPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatus) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

// Workflow record the status of workflow
func (o ApplicationStatusPtrOutput) Workflow() ApplicationStatusWorkflowPtrOutput {
	return o.ApplyT(func(v *ApplicationStatus) *ApplicationStatusWorkflow {
		if v == nil {
			return nil
		}
		return v.Workflow
	}).(ApplicationStatusWorkflowPtrOutput)
}

// ClusterObjectReference defines the object reference with cluster.
type ApplicationStatusAppliedresources struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	Cluster    *string `pulumi:"cluster"`
	Creator    *string `pulumi:"creator"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ApplicationStatusAppliedresourcesInput is an input type that accepts ApplicationStatusAppliedresourcesArgs and ApplicationStatusAppliedresourcesOutput values.
// You can construct a concrete instance of `ApplicationStatusAppliedresourcesInput` via:
//
//	ApplicationStatusAppliedresourcesArgs{...}
type ApplicationStatusAppliedresourcesInput interface {
	pulumi.Input

	ToApplicationStatusAppliedresourcesOutput() ApplicationStatusAppliedresourcesOutput
	ToApplicationStatusAppliedresourcesOutputWithContext(context.Context) ApplicationStatusAppliedresourcesOutput
}

// ClusterObjectReference defines the object reference with cluster.
type ApplicationStatusAppliedresourcesArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	Cluster    pulumi.StringPtrInput `pulumi:"cluster"`
	Creator    pulumi.StringPtrInput `pulumi:"creator"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ApplicationStatusAppliedresourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusAppliedresources)(nil)).Elem()
}

func (i ApplicationStatusAppliedresourcesArgs) ToApplicationStatusAppliedresourcesOutput() ApplicationStatusAppliedresourcesOutput {
	return i.ToApplicationStatusAppliedresourcesOutputWithContext(context.Background())
}

func (i ApplicationStatusAppliedresourcesArgs) ToApplicationStatusAppliedresourcesOutputWithContext(ctx context.Context) ApplicationStatusAppliedresourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusAppliedresourcesOutput)
}

// ApplicationStatusAppliedresourcesArrayInput is an input type that accepts ApplicationStatusAppliedresourcesArray and ApplicationStatusAppliedresourcesArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusAppliedresourcesArrayInput` via:
//
//	ApplicationStatusAppliedresourcesArray{ ApplicationStatusAppliedresourcesArgs{...} }
type ApplicationStatusAppliedresourcesArrayInput interface {
	pulumi.Input

	ToApplicationStatusAppliedresourcesArrayOutput() ApplicationStatusAppliedresourcesArrayOutput
	ToApplicationStatusAppliedresourcesArrayOutputWithContext(context.Context) ApplicationStatusAppliedresourcesArrayOutput
}

type ApplicationStatusAppliedresourcesArray []ApplicationStatusAppliedresourcesInput

func (ApplicationStatusAppliedresourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusAppliedresources)(nil)).Elem()
}

func (i ApplicationStatusAppliedresourcesArray) ToApplicationStatusAppliedresourcesArrayOutput() ApplicationStatusAppliedresourcesArrayOutput {
	return i.ToApplicationStatusAppliedresourcesArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusAppliedresourcesArray) ToApplicationStatusAppliedresourcesArrayOutputWithContext(ctx context.Context) ApplicationStatusAppliedresourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusAppliedresourcesArrayOutput)
}

// ClusterObjectReference defines the object reference with cluster.
type ApplicationStatusAppliedresourcesOutput struct{ *pulumi.OutputState }

func (ApplicationStatusAppliedresourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusAppliedresources)(nil)).Elem()
}

func (o ApplicationStatusAppliedresourcesOutput) ToApplicationStatusAppliedresourcesOutput() ApplicationStatusAppliedresourcesOutput {
	return o
}

func (o ApplicationStatusAppliedresourcesOutput) ToApplicationStatusAppliedresourcesOutputWithContext(ctx context.Context) ApplicationStatusAppliedresourcesOutput {
	return o
}

// API version of the referent.
func (o ApplicationStatusAppliedresourcesOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusAppliedresources) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusAppliedresourcesOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusAppliedresources) *string { return v.Cluster }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusAppliedresourcesOutput) Creator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusAppliedresources) *string { return v.Creator }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ApplicationStatusAppliedresourcesOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusAppliedresources) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ApplicationStatusAppliedresourcesOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusAppliedresources) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ApplicationStatusAppliedresourcesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusAppliedresources) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ApplicationStatusAppliedresourcesOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusAppliedresources) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ApplicationStatusAppliedresourcesOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusAppliedresources) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ApplicationStatusAppliedresourcesOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusAppliedresources) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ApplicationStatusAppliedresourcesArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusAppliedresourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusAppliedresources)(nil)).Elem()
}

func (o ApplicationStatusAppliedresourcesArrayOutput) ToApplicationStatusAppliedresourcesArrayOutput() ApplicationStatusAppliedresourcesArrayOutput {
	return o
}

func (o ApplicationStatusAppliedresourcesArrayOutput) ToApplicationStatusAppliedresourcesArrayOutputWithContext(ctx context.Context) ApplicationStatusAppliedresourcesArrayOutput {
	return o
}

func (o ApplicationStatusAppliedresourcesArrayOutput) Index(i pulumi.IntInput) ApplicationStatusAppliedresourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusAppliedresources {
		return vs[0].([]ApplicationStatusAppliedresources)[vs[1].(int)]
	}).(ApplicationStatusAppliedresourcesOutput)
}

// ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
//
//	Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
type ApplicationStatusComponents struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ApplicationStatusComponentsInput is an input type that accepts ApplicationStatusComponentsArgs and ApplicationStatusComponentsOutput values.
// You can construct a concrete instance of `ApplicationStatusComponentsInput` via:
//
//	ApplicationStatusComponentsArgs{...}
type ApplicationStatusComponentsInput interface {
	pulumi.Input

	ToApplicationStatusComponentsOutput() ApplicationStatusComponentsOutput
	ToApplicationStatusComponentsOutputWithContext(context.Context) ApplicationStatusComponentsOutput
}

// ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
//
//	Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
type ApplicationStatusComponentsArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ApplicationStatusComponentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusComponents)(nil)).Elem()
}

func (i ApplicationStatusComponentsArgs) ToApplicationStatusComponentsOutput() ApplicationStatusComponentsOutput {
	return i.ToApplicationStatusComponentsOutputWithContext(context.Background())
}

func (i ApplicationStatusComponentsArgs) ToApplicationStatusComponentsOutputWithContext(ctx context.Context) ApplicationStatusComponentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusComponentsOutput)
}

// ApplicationStatusComponentsArrayInput is an input type that accepts ApplicationStatusComponentsArray and ApplicationStatusComponentsArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusComponentsArrayInput` via:
//
//	ApplicationStatusComponentsArray{ ApplicationStatusComponentsArgs{...} }
type ApplicationStatusComponentsArrayInput interface {
	pulumi.Input

	ToApplicationStatusComponentsArrayOutput() ApplicationStatusComponentsArrayOutput
	ToApplicationStatusComponentsArrayOutputWithContext(context.Context) ApplicationStatusComponentsArrayOutput
}

type ApplicationStatusComponentsArray []ApplicationStatusComponentsInput

func (ApplicationStatusComponentsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusComponents)(nil)).Elem()
}

func (i ApplicationStatusComponentsArray) ToApplicationStatusComponentsArrayOutput() ApplicationStatusComponentsArrayOutput {
	return i.ToApplicationStatusComponentsArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusComponentsArray) ToApplicationStatusComponentsArrayOutputWithContext(ctx context.Context) ApplicationStatusComponentsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusComponentsArrayOutput)
}

// ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
//
//	Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
type ApplicationStatusComponentsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusComponentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusComponents)(nil)).Elem()
}

func (o ApplicationStatusComponentsOutput) ToApplicationStatusComponentsOutput() ApplicationStatusComponentsOutput {
	return o
}

func (o ApplicationStatusComponentsOutput) ToApplicationStatusComponentsOutputWithContext(ctx context.Context) ApplicationStatusComponentsOutput {
	return o
}

// API version of the referent.
func (o ApplicationStatusComponentsOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusComponents) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ApplicationStatusComponentsOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusComponents) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ApplicationStatusComponentsOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusComponents) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ApplicationStatusComponentsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusComponents) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ApplicationStatusComponentsOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusComponents) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ApplicationStatusComponentsOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusComponents) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ApplicationStatusComponentsOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusComponents) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ApplicationStatusComponentsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusComponentsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusComponents)(nil)).Elem()
}

func (o ApplicationStatusComponentsArrayOutput) ToApplicationStatusComponentsArrayOutput() ApplicationStatusComponentsArrayOutput {
	return o
}

func (o ApplicationStatusComponentsArrayOutput) ToApplicationStatusComponentsArrayOutputWithContext(ctx context.Context) ApplicationStatusComponentsArrayOutput {
	return o
}

func (o ApplicationStatusComponentsArrayOutput) Index(i pulumi.IntInput) ApplicationStatusComponentsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusComponents {
		return vs[0].([]ApplicationStatusComponents)[vs[1].(int)]
	}).(ApplicationStatusComponentsOutput)
}

// A Condition that may apply to a resource.
type ApplicationStatusConditions struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime string `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message *string `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason string `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status string `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type string `pulumi:"type"`
}

// ApplicationStatusConditionsInput is an input type that accepts ApplicationStatusConditionsArgs and ApplicationStatusConditionsOutput values.
// You can construct a concrete instance of `ApplicationStatusConditionsInput` via:
//
//	ApplicationStatusConditionsArgs{...}
type ApplicationStatusConditionsInput interface {
	pulumi.Input

	ToApplicationStatusConditionsOutput() ApplicationStatusConditionsOutput
	ToApplicationStatusConditionsOutputWithContext(context.Context) ApplicationStatusConditionsOutput
}

// A Condition that may apply to a resource.
type ApplicationStatusConditionsArgs struct {
	// LastTransitionTime is the last time this condition transitioned from one status to another.
	LastTransitionTime pulumi.StringInput `pulumi:"lastTransitionTime"`
	// A Message containing details about this condition's last transition from one status to another, if any.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// A Reason for this condition's last transition from one status to another.
	Reason pulumi.StringInput `pulumi:"reason"`
	// Status of this condition; is it currently True, False, or Unknown?
	Status pulumi.StringInput `pulumi:"status"`
	// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ApplicationStatusConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusConditions)(nil)).Elem()
}

func (i ApplicationStatusConditionsArgs) ToApplicationStatusConditionsOutput() ApplicationStatusConditionsOutput {
	return i.ToApplicationStatusConditionsOutputWithContext(context.Background())
}

func (i ApplicationStatusConditionsArgs) ToApplicationStatusConditionsOutputWithContext(ctx context.Context) ApplicationStatusConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusConditionsOutput)
}

// ApplicationStatusConditionsArrayInput is an input type that accepts ApplicationStatusConditionsArray and ApplicationStatusConditionsArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusConditionsArrayInput` via:
//
//	ApplicationStatusConditionsArray{ ApplicationStatusConditionsArgs{...} }
type ApplicationStatusConditionsArrayInput interface {
	pulumi.Input

	ToApplicationStatusConditionsArrayOutput() ApplicationStatusConditionsArrayOutput
	ToApplicationStatusConditionsArrayOutputWithContext(context.Context) ApplicationStatusConditionsArrayOutput
}

type ApplicationStatusConditionsArray []ApplicationStatusConditionsInput

func (ApplicationStatusConditionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusConditions)(nil)).Elem()
}

func (i ApplicationStatusConditionsArray) ToApplicationStatusConditionsArrayOutput() ApplicationStatusConditionsArrayOutput {
	return i.ToApplicationStatusConditionsArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusConditionsArray) ToApplicationStatusConditionsArrayOutputWithContext(ctx context.Context) ApplicationStatusConditionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusConditionsArrayOutput)
}

// A Condition that may apply to a resource.
type ApplicationStatusConditionsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusConditions)(nil)).Elem()
}

func (o ApplicationStatusConditionsOutput) ToApplicationStatusConditionsOutput() ApplicationStatusConditionsOutput {
	return o
}

func (o ApplicationStatusConditionsOutput) ToApplicationStatusConditionsOutputWithContext(ctx context.Context) ApplicationStatusConditionsOutput {
	return o
}

// LastTransitionTime is the last time this condition transitioned from one status to another.
func (o ApplicationStatusConditionsOutput) LastTransitionTime() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusConditions) string { return v.LastTransitionTime }).(pulumi.StringOutput)
}

// A Message containing details about this condition's last transition from one status to another, if any.
func (o ApplicationStatusConditionsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusConditions) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// A Reason for this condition's last transition from one status to another.
func (o ApplicationStatusConditionsOutput) Reason() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusConditions) string { return v.Reason }).(pulumi.StringOutput)
}

// Status of this condition; is it currently True, False, or Unknown?
func (o ApplicationStatusConditionsOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusConditions) string { return v.Status }).(pulumi.StringOutput)
}

// Type of this condition. At most one of each condition type may apply to a resource at any point in time.
func (o ApplicationStatusConditionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusConditions) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationStatusConditionsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusConditionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusConditions)(nil)).Elem()
}

func (o ApplicationStatusConditionsArrayOutput) ToApplicationStatusConditionsArrayOutput() ApplicationStatusConditionsArrayOutput {
	return o
}

func (o ApplicationStatusConditionsArrayOutput) ToApplicationStatusConditionsArrayOutputWithContext(ctx context.Context) ApplicationStatusConditionsArrayOutput {
	return o
}

func (o ApplicationStatusConditionsArrayOutput) Index(i pulumi.IntInput) ApplicationStatusConditionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusConditions {
		return vs[0].([]ApplicationStatusConditions)[vs[1].(int)]
	}).(ApplicationStatusConditionsOutput)
}

// LatestRevision of the application configuration it generates
type ApplicationStatusLatestrevision struct {
	Name     string `pulumi:"name"`
	Revision int    `pulumi:"revision"`
	// RevisionHash record the hash value of the spec of ApplicationRevision object.
	RevisionHash *string `pulumi:"revisionHash"`
}

// ApplicationStatusLatestrevisionInput is an input type that accepts ApplicationStatusLatestrevisionArgs and ApplicationStatusLatestrevisionOutput values.
// You can construct a concrete instance of `ApplicationStatusLatestrevisionInput` via:
//
//	ApplicationStatusLatestrevisionArgs{...}
type ApplicationStatusLatestrevisionInput interface {
	pulumi.Input

	ToApplicationStatusLatestrevisionOutput() ApplicationStatusLatestrevisionOutput
	ToApplicationStatusLatestrevisionOutputWithContext(context.Context) ApplicationStatusLatestrevisionOutput
}

// LatestRevision of the application configuration it generates
type ApplicationStatusLatestrevisionArgs struct {
	Name     pulumi.StringInput `pulumi:"name"`
	Revision pulumi.IntInput    `pulumi:"revision"`
	// RevisionHash record the hash value of the spec of ApplicationRevision object.
	RevisionHash pulumi.StringPtrInput `pulumi:"revisionHash"`
}

func (ApplicationStatusLatestrevisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusLatestrevision)(nil)).Elem()
}

func (i ApplicationStatusLatestrevisionArgs) ToApplicationStatusLatestrevisionOutput() ApplicationStatusLatestrevisionOutput {
	return i.ToApplicationStatusLatestrevisionOutputWithContext(context.Background())
}

func (i ApplicationStatusLatestrevisionArgs) ToApplicationStatusLatestrevisionOutputWithContext(ctx context.Context) ApplicationStatusLatestrevisionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusLatestrevisionOutput)
}

func (i ApplicationStatusLatestrevisionArgs) ToApplicationStatusLatestrevisionPtrOutput() ApplicationStatusLatestrevisionPtrOutput {
	return i.ToApplicationStatusLatestrevisionPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusLatestrevisionArgs) ToApplicationStatusLatestrevisionPtrOutputWithContext(ctx context.Context) ApplicationStatusLatestrevisionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusLatestrevisionOutput).ToApplicationStatusLatestrevisionPtrOutputWithContext(ctx)
}

// ApplicationStatusLatestrevisionPtrInput is an input type that accepts ApplicationStatusLatestrevisionArgs, ApplicationStatusLatestrevisionPtr and ApplicationStatusLatestrevisionPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusLatestrevisionPtrInput` via:
//
//	        ApplicationStatusLatestrevisionArgs{...}
//
//	or:
//
//	        nil
type ApplicationStatusLatestrevisionPtrInput interface {
	pulumi.Input

	ToApplicationStatusLatestrevisionPtrOutput() ApplicationStatusLatestrevisionPtrOutput
	ToApplicationStatusLatestrevisionPtrOutputWithContext(context.Context) ApplicationStatusLatestrevisionPtrOutput
}

type applicationStatusLatestrevisionPtrType ApplicationStatusLatestrevisionArgs

func ApplicationStatusLatestrevisionPtr(v *ApplicationStatusLatestrevisionArgs) ApplicationStatusLatestrevisionPtrInput {
	return (*applicationStatusLatestrevisionPtrType)(v)
}

func (*applicationStatusLatestrevisionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusLatestrevision)(nil)).Elem()
}

func (i *applicationStatusLatestrevisionPtrType) ToApplicationStatusLatestrevisionPtrOutput() ApplicationStatusLatestrevisionPtrOutput {
	return i.ToApplicationStatusLatestrevisionPtrOutputWithContext(context.Background())
}

func (i *applicationStatusLatestrevisionPtrType) ToApplicationStatusLatestrevisionPtrOutputWithContext(ctx context.Context) ApplicationStatusLatestrevisionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusLatestrevisionPtrOutput)
}

// LatestRevision of the application configuration it generates
type ApplicationStatusLatestrevisionOutput struct{ *pulumi.OutputState }

func (ApplicationStatusLatestrevisionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusLatestrevision)(nil)).Elem()
}

func (o ApplicationStatusLatestrevisionOutput) ToApplicationStatusLatestrevisionOutput() ApplicationStatusLatestrevisionOutput {
	return o
}

func (o ApplicationStatusLatestrevisionOutput) ToApplicationStatusLatestrevisionOutputWithContext(ctx context.Context) ApplicationStatusLatestrevisionOutput {
	return o
}

func (o ApplicationStatusLatestrevisionOutput) ToApplicationStatusLatestrevisionPtrOutput() ApplicationStatusLatestrevisionPtrOutput {
	return o.ToApplicationStatusLatestrevisionPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusLatestrevisionOutput) ToApplicationStatusLatestrevisionPtrOutputWithContext(ctx context.Context) ApplicationStatusLatestrevisionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationStatusLatestrevision) *ApplicationStatusLatestrevision {
		return &v
	}).(ApplicationStatusLatestrevisionPtrOutput)
}

func (o ApplicationStatusLatestrevisionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusLatestrevision) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationStatusLatestrevisionOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v ApplicationStatusLatestrevision) int { return v.Revision }).(pulumi.IntOutput)
}

// RevisionHash record the hash value of the spec of ApplicationRevision object.
func (o ApplicationStatusLatestrevisionOutput) RevisionHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusLatestrevision) *string { return v.RevisionHash }).(pulumi.StringPtrOutput)
}

type ApplicationStatusLatestrevisionPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusLatestrevisionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusLatestrevision)(nil)).Elem()
}

func (o ApplicationStatusLatestrevisionPtrOutput) ToApplicationStatusLatestrevisionPtrOutput() ApplicationStatusLatestrevisionPtrOutput {
	return o
}

func (o ApplicationStatusLatestrevisionPtrOutput) ToApplicationStatusLatestrevisionPtrOutputWithContext(ctx context.Context) ApplicationStatusLatestrevisionPtrOutput {
	return o
}

func (o ApplicationStatusLatestrevisionPtrOutput) Elem() ApplicationStatusLatestrevisionOutput {
	return o.ApplyT(func(v *ApplicationStatusLatestrevision) ApplicationStatusLatestrevision {
		if v != nil {
			return *v
		}
		var ret ApplicationStatusLatestrevision
		return ret
	}).(ApplicationStatusLatestrevisionOutput)
}

func (o ApplicationStatusLatestrevisionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusLatestrevision) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusLatestrevisionPtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusLatestrevision) *int {
		if v == nil {
			return nil
		}
		return &v.Revision
	}).(pulumi.IntPtrOutput)
}

// RevisionHash record the hash value of the spec of ApplicationRevision object.
func (o ApplicationStatusLatestrevisionPtrOutput) RevisionHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusLatestrevision) *string {
		if v == nil {
			return nil
		}
		return v.RevisionHash
	}).(pulumi.StringPtrOutput)
}

// PolicyStatus records the status of policy Deprecated
type ApplicationStatusPolicy struct {
	Name   string                 `pulumi:"name"`
	Status map[string]interface{} `pulumi:"status"`
	Type   string                 `pulumi:"type"`
}

// ApplicationStatusPolicyInput is an input type that accepts ApplicationStatusPolicyArgs and ApplicationStatusPolicyOutput values.
// You can construct a concrete instance of `ApplicationStatusPolicyInput` via:
//
//	ApplicationStatusPolicyArgs{...}
type ApplicationStatusPolicyInput interface {
	pulumi.Input

	ToApplicationStatusPolicyOutput() ApplicationStatusPolicyOutput
	ToApplicationStatusPolicyOutputWithContext(context.Context) ApplicationStatusPolicyOutput
}

// PolicyStatus records the status of policy Deprecated
type ApplicationStatusPolicyArgs struct {
	Name   pulumi.StringInput `pulumi:"name"`
	Status pulumi.MapInput    `pulumi:"status"`
	Type   pulumi.StringInput `pulumi:"type"`
}

func (ApplicationStatusPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusPolicy)(nil)).Elem()
}

func (i ApplicationStatusPolicyArgs) ToApplicationStatusPolicyOutput() ApplicationStatusPolicyOutput {
	return i.ToApplicationStatusPolicyOutputWithContext(context.Background())
}

func (i ApplicationStatusPolicyArgs) ToApplicationStatusPolicyOutputWithContext(ctx context.Context) ApplicationStatusPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusPolicyOutput)
}

// ApplicationStatusPolicyArrayInput is an input type that accepts ApplicationStatusPolicyArray and ApplicationStatusPolicyArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusPolicyArrayInput` via:
//
//	ApplicationStatusPolicyArray{ ApplicationStatusPolicyArgs{...} }
type ApplicationStatusPolicyArrayInput interface {
	pulumi.Input

	ToApplicationStatusPolicyArrayOutput() ApplicationStatusPolicyArrayOutput
	ToApplicationStatusPolicyArrayOutputWithContext(context.Context) ApplicationStatusPolicyArrayOutput
}

type ApplicationStatusPolicyArray []ApplicationStatusPolicyInput

func (ApplicationStatusPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusPolicy)(nil)).Elem()
}

func (i ApplicationStatusPolicyArray) ToApplicationStatusPolicyArrayOutput() ApplicationStatusPolicyArrayOutput {
	return i.ToApplicationStatusPolicyArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusPolicyArray) ToApplicationStatusPolicyArrayOutputWithContext(ctx context.Context) ApplicationStatusPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusPolicyArrayOutput)
}

// PolicyStatus records the status of policy Deprecated
type ApplicationStatusPolicyOutput struct{ *pulumi.OutputState }

func (ApplicationStatusPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusPolicy)(nil)).Elem()
}

func (o ApplicationStatusPolicyOutput) ToApplicationStatusPolicyOutput() ApplicationStatusPolicyOutput {
	return o
}

func (o ApplicationStatusPolicyOutput) ToApplicationStatusPolicyOutputWithContext(ctx context.Context) ApplicationStatusPolicyOutput {
	return o
}

func (o ApplicationStatusPolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusPolicy) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationStatusPolicyOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v ApplicationStatusPolicy) map[string]interface{} { return v.Status }).(pulumi.MapOutput)
}

func (o ApplicationStatusPolicyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusPolicy) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationStatusPolicyArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusPolicy)(nil)).Elem()
}

func (o ApplicationStatusPolicyArrayOutput) ToApplicationStatusPolicyArrayOutput() ApplicationStatusPolicyArrayOutput {
	return o
}

func (o ApplicationStatusPolicyArrayOutput) ToApplicationStatusPolicyArrayOutputWithContext(ctx context.Context) ApplicationStatusPolicyArrayOutput {
	return o
}

func (o ApplicationStatusPolicyArrayOutput) Index(i pulumi.IntInput) ApplicationStatusPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusPolicy {
		return vs[0].([]ApplicationStatusPolicy)[vs[1].(int)]
	}).(ApplicationStatusPolicyOutput)
}

// ApplicationComponentStatus record the health status of App component
type ApplicationStatusServices struct {
	Cluster   *string                           `pulumi:"cluster"`
	Env       *string                           `pulumi:"env"`
	Healthy   bool                              `pulumi:"healthy"`
	Message   *string                           `pulumi:"message"`
	Name      string                            `pulumi:"name"`
	Namespace *string                           `pulumi:"namespace"`
	Scopes    []ApplicationStatusServicesScopes `pulumi:"scopes"`
	Traits    []ApplicationStatusServicesTraits `pulumi:"traits"`
	// WorkloadDefinition is the definition of a WorkloadDefinition, such as deployments/apps.v1
	WorkloadDefinition *ApplicationStatusServicesWorkloaddefinition `pulumi:"workloadDefinition"`
}

// ApplicationStatusServicesInput is an input type that accepts ApplicationStatusServicesArgs and ApplicationStatusServicesOutput values.
// You can construct a concrete instance of `ApplicationStatusServicesInput` via:
//
//	ApplicationStatusServicesArgs{...}
type ApplicationStatusServicesInput interface {
	pulumi.Input

	ToApplicationStatusServicesOutput() ApplicationStatusServicesOutput
	ToApplicationStatusServicesOutputWithContext(context.Context) ApplicationStatusServicesOutput
}

// ApplicationComponentStatus record the health status of App component
type ApplicationStatusServicesArgs struct {
	Cluster   pulumi.StringPtrInput                     `pulumi:"cluster"`
	Env       pulumi.StringPtrInput                     `pulumi:"env"`
	Healthy   pulumi.BoolInput                          `pulumi:"healthy"`
	Message   pulumi.StringPtrInput                     `pulumi:"message"`
	Name      pulumi.StringInput                        `pulumi:"name"`
	Namespace pulumi.StringPtrInput                     `pulumi:"namespace"`
	Scopes    ApplicationStatusServicesScopesArrayInput `pulumi:"scopes"`
	Traits    ApplicationStatusServicesTraitsArrayInput `pulumi:"traits"`
	// WorkloadDefinition is the definition of a WorkloadDefinition, such as deployments/apps.v1
	WorkloadDefinition ApplicationStatusServicesWorkloaddefinitionPtrInput `pulumi:"workloadDefinition"`
}

func (ApplicationStatusServicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusServices)(nil)).Elem()
}

func (i ApplicationStatusServicesArgs) ToApplicationStatusServicesOutput() ApplicationStatusServicesOutput {
	return i.ToApplicationStatusServicesOutputWithContext(context.Background())
}

func (i ApplicationStatusServicesArgs) ToApplicationStatusServicesOutputWithContext(ctx context.Context) ApplicationStatusServicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusServicesOutput)
}

// ApplicationStatusServicesArrayInput is an input type that accepts ApplicationStatusServicesArray and ApplicationStatusServicesArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusServicesArrayInput` via:
//
//	ApplicationStatusServicesArray{ ApplicationStatusServicesArgs{...} }
type ApplicationStatusServicesArrayInput interface {
	pulumi.Input

	ToApplicationStatusServicesArrayOutput() ApplicationStatusServicesArrayOutput
	ToApplicationStatusServicesArrayOutputWithContext(context.Context) ApplicationStatusServicesArrayOutput
}

type ApplicationStatusServicesArray []ApplicationStatusServicesInput

func (ApplicationStatusServicesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusServices)(nil)).Elem()
}

func (i ApplicationStatusServicesArray) ToApplicationStatusServicesArrayOutput() ApplicationStatusServicesArrayOutput {
	return i.ToApplicationStatusServicesArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusServicesArray) ToApplicationStatusServicesArrayOutputWithContext(ctx context.Context) ApplicationStatusServicesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusServicesArrayOutput)
}

// ApplicationComponentStatus record the health status of App component
type ApplicationStatusServicesOutput struct{ *pulumi.OutputState }

func (ApplicationStatusServicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusServices)(nil)).Elem()
}

func (o ApplicationStatusServicesOutput) ToApplicationStatusServicesOutput() ApplicationStatusServicesOutput {
	return o
}

func (o ApplicationStatusServicesOutput) ToApplicationStatusServicesOutputWithContext(ctx context.Context) ApplicationStatusServicesOutput {
	return o
}

func (o ApplicationStatusServicesOutput) Cluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusServices) *string { return v.Cluster }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusServicesOutput) Env() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusServices) *string { return v.Env }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusServicesOutput) Healthy() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationStatusServices) bool { return v.Healthy }).(pulumi.BoolOutput)
}

func (o ApplicationStatusServicesOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusServices) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusServicesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusServices) string { return v.Name }).(pulumi.StringOutput)
}

func (o ApplicationStatusServicesOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusServices) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusServicesOutput) Scopes() ApplicationStatusServicesScopesArrayOutput {
	return o.ApplyT(func(v ApplicationStatusServices) []ApplicationStatusServicesScopes { return v.Scopes }).(ApplicationStatusServicesScopesArrayOutput)
}

func (o ApplicationStatusServicesOutput) Traits() ApplicationStatusServicesTraitsArrayOutput {
	return o.ApplyT(func(v ApplicationStatusServices) []ApplicationStatusServicesTraits { return v.Traits }).(ApplicationStatusServicesTraitsArrayOutput)
}

// WorkloadDefinition is the definition of a WorkloadDefinition, such as deployments/apps.v1
func (o ApplicationStatusServicesOutput) WorkloadDefinition() ApplicationStatusServicesWorkloaddefinitionPtrOutput {
	return o.ApplyT(func(v ApplicationStatusServices) *ApplicationStatusServicesWorkloaddefinition {
		return v.WorkloadDefinition
	}).(ApplicationStatusServicesWorkloaddefinitionPtrOutput)
}

type ApplicationStatusServicesArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusServicesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusServices)(nil)).Elem()
}

func (o ApplicationStatusServicesArrayOutput) ToApplicationStatusServicesArrayOutput() ApplicationStatusServicesArrayOutput {
	return o
}

func (o ApplicationStatusServicesArrayOutput) ToApplicationStatusServicesArrayOutputWithContext(ctx context.Context) ApplicationStatusServicesArrayOutput {
	return o
}

func (o ApplicationStatusServicesArrayOutput) Index(i pulumi.IntInput) ApplicationStatusServicesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusServices {
		return vs[0].([]ApplicationStatusServices)[vs[1].(int)]
	}).(ApplicationStatusServicesOutput)
}

// ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
//
//	Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
type ApplicationStatusServicesScopes struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ApplicationStatusServicesScopesInput is an input type that accepts ApplicationStatusServicesScopesArgs and ApplicationStatusServicesScopesOutput values.
// You can construct a concrete instance of `ApplicationStatusServicesScopesInput` via:
//
//	ApplicationStatusServicesScopesArgs{...}
type ApplicationStatusServicesScopesInput interface {
	pulumi.Input

	ToApplicationStatusServicesScopesOutput() ApplicationStatusServicesScopesOutput
	ToApplicationStatusServicesScopesOutputWithContext(context.Context) ApplicationStatusServicesScopesOutput
}

// ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
//
//	Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
type ApplicationStatusServicesScopesArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ApplicationStatusServicesScopesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusServicesScopes)(nil)).Elem()
}

func (i ApplicationStatusServicesScopesArgs) ToApplicationStatusServicesScopesOutput() ApplicationStatusServicesScopesOutput {
	return i.ToApplicationStatusServicesScopesOutputWithContext(context.Background())
}

func (i ApplicationStatusServicesScopesArgs) ToApplicationStatusServicesScopesOutputWithContext(ctx context.Context) ApplicationStatusServicesScopesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusServicesScopesOutput)
}

// ApplicationStatusServicesScopesArrayInput is an input type that accepts ApplicationStatusServicesScopesArray and ApplicationStatusServicesScopesArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusServicesScopesArrayInput` via:
//
//	ApplicationStatusServicesScopesArray{ ApplicationStatusServicesScopesArgs{...} }
type ApplicationStatusServicesScopesArrayInput interface {
	pulumi.Input

	ToApplicationStatusServicesScopesArrayOutput() ApplicationStatusServicesScopesArrayOutput
	ToApplicationStatusServicesScopesArrayOutputWithContext(context.Context) ApplicationStatusServicesScopesArrayOutput
}

type ApplicationStatusServicesScopesArray []ApplicationStatusServicesScopesInput

func (ApplicationStatusServicesScopesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusServicesScopes)(nil)).Elem()
}

func (i ApplicationStatusServicesScopesArray) ToApplicationStatusServicesScopesArrayOutput() ApplicationStatusServicesScopesArrayOutput {
	return i.ToApplicationStatusServicesScopesArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusServicesScopesArray) ToApplicationStatusServicesScopesArrayOutputWithContext(ctx context.Context) ApplicationStatusServicesScopesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusServicesScopesArrayOutput)
}

// ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
//
//	Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
type ApplicationStatusServicesScopesOutput struct{ *pulumi.OutputState }

func (ApplicationStatusServicesScopesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusServicesScopes)(nil)).Elem()
}

func (o ApplicationStatusServicesScopesOutput) ToApplicationStatusServicesScopesOutput() ApplicationStatusServicesScopesOutput {
	return o
}

func (o ApplicationStatusServicesScopesOutput) ToApplicationStatusServicesScopesOutputWithContext(ctx context.Context) ApplicationStatusServicesScopesOutput {
	return o
}

// API version of the referent.
func (o ApplicationStatusServicesScopesOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusServicesScopes) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ApplicationStatusServicesScopesOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusServicesScopes) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ApplicationStatusServicesScopesOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusServicesScopes) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ApplicationStatusServicesScopesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusServicesScopes) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ApplicationStatusServicesScopesOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusServicesScopes) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ApplicationStatusServicesScopesOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusServicesScopes) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ApplicationStatusServicesScopesOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusServicesScopes) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ApplicationStatusServicesScopesArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusServicesScopesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusServicesScopes)(nil)).Elem()
}

func (o ApplicationStatusServicesScopesArrayOutput) ToApplicationStatusServicesScopesArrayOutput() ApplicationStatusServicesScopesArrayOutput {
	return o
}

func (o ApplicationStatusServicesScopesArrayOutput) ToApplicationStatusServicesScopesArrayOutputWithContext(ctx context.Context) ApplicationStatusServicesScopesArrayOutput {
	return o
}

func (o ApplicationStatusServicesScopesArrayOutput) Index(i pulumi.IntInput) ApplicationStatusServicesScopesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusServicesScopes {
		return vs[0].([]ApplicationStatusServicesScopes)[vs[1].(int)]
	}).(ApplicationStatusServicesScopesOutput)
}

// ApplicationTraitStatus records the trait health status
type ApplicationStatusServicesTraits struct {
	Healthy bool    `pulumi:"healthy"`
	Message *string `pulumi:"message"`
	Type    string  `pulumi:"type"`
}

// ApplicationStatusServicesTraitsInput is an input type that accepts ApplicationStatusServicesTraitsArgs and ApplicationStatusServicesTraitsOutput values.
// You can construct a concrete instance of `ApplicationStatusServicesTraitsInput` via:
//
//	ApplicationStatusServicesTraitsArgs{...}
type ApplicationStatusServicesTraitsInput interface {
	pulumi.Input

	ToApplicationStatusServicesTraitsOutput() ApplicationStatusServicesTraitsOutput
	ToApplicationStatusServicesTraitsOutputWithContext(context.Context) ApplicationStatusServicesTraitsOutput
}

// ApplicationTraitStatus records the trait health status
type ApplicationStatusServicesTraitsArgs struct {
	Healthy pulumi.BoolInput      `pulumi:"healthy"`
	Message pulumi.StringPtrInput `pulumi:"message"`
	Type    pulumi.StringInput    `pulumi:"type"`
}

func (ApplicationStatusServicesTraitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusServicesTraits)(nil)).Elem()
}

func (i ApplicationStatusServicesTraitsArgs) ToApplicationStatusServicesTraitsOutput() ApplicationStatusServicesTraitsOutput {
	return i.ToApplicationStatusServicesTraitsOutputWithContext(context.Background())
}

func (i ApplicationStatusServicesTraitsArgs) ToApplicationStatusServicesTraitsOutputWithContext(ctx context.Context) ApplicationStatusServicesTraitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusServicesTraitsOutput)
}

// ApplicationStatusServicesTraitsArrayInput is an input type that accepts ApplicationStatusServicesTraitsArray and ApplicationStatusServicesTraitsArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusServicesTraitsArrayInput` via:
//
//	ApplicationStatusServicesTraitsArray{ ApplicationStatusServicesTraitsArgs{...} }
type ApplicationStatusServicesTraitsArrayInput interface {
	pulumi.Input

	ToApplicationStatusServicesTraitsArrayOutput() ApplicationStatusServicesTraitsArrayOutput
	ToApplicationStatusServicesTraitsArrayOutputWithContext(context.Context) ApplicationStatusServicesTraitsArrayOutput
}

type ApplicationStatusServicesTraitsArray []ApplicationStatusServicesTraitsInput

func (ApplicationStatusServicesTraitsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusServicesTraits)(nil)).Elem()
}

func (i ApplicationStatusServicesTraitsArray) ToApplicationStatusServicesTraitsArrayOutput() ApplicationStatusServicesTraitsArrayOutput {
	return i.ToApplicationStatusServicesTraitsArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusServicesTraitsArray) ToApplicationStatusServicesTraitsArrayOutputWithContext(ctx context.Context) ApplicationStatusServicesTraitsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusServicesTraitsArrayOutput)
}

// ApplicationTraitStatus records the trait health status
type ApplicationStatusServicesTraitsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusServicesTraitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusServicesTraits)(nil)).Elem()
}

func (o ApplicationStatusServicesTraitsOutput) ToApplicationStatusServicesTraitsOutput() ApplicationStatusServicesTraitsOutput {
	return o
}

func (o ApplicationStatusServicesTraitsOutput) ToApplicationStatusServicesTraitsOutputWithContext(ctx context.Context) ApplicationStatusServicesTraitsOutput {
	return o
}

func (o ApplicationStatusServicesTraitsOutput) Healthy() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationStatusServicesTraits) bool { return v.Healthy }).(pulumi.BoolOutput)
}

func (o ApplicationStatusServicesTraitsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusServicesTraits) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusServicesTraitsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusServicesTraits) string { return v.Type }).(pulumi.StringOutput)
}

type ApplicationStatusServicesTraitsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusServicesTraitsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusServicesTraits)(nil)).Elem()
}

func (o ApplicationStatusServicesTraitsArrayOutput) ToApplicationStatusServicesTraitsArrayOutput() ApplicationStatusServicesTraitsArrayOutput {
	return o
}

func (o ApplicationStatusServicesTraitsArrayOutput) ToApplicationStatusServicesTraitsArrayOutputWithContext(ctx context.Context) ApplicationStatusServicesTraitsArrayOutput {
	return o
}

func (o ApplicationStatusServicesTraitsArrayOutput) Index(i pulumi.IntInput) ApplicationStatusServicesTraitsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusServicesTraits {
		return vs[0].([]ApplicationStatusServicesTraits)[vs[1].(int)]
	}).(ApplicationStatusServicesTraitsOutput)
}

// WorkloadDefinition is the definition of a WorkloadDefinition, such as deployments/apps.v1
type ApplicationStatusServicesWorkloaddefinition struct {
	ApiVersion string `pulumi:"apiVersion"`
	Kind       string `pulumi:"kind"`
}

// ApplicationStatusServicesWorkloaddefinitionInput is an input type that accepts ApplicationStatusServicesWorkloaddefinitionArgs and ApplicationStatusServicesWorkloaddefinitionOutput values.
// You can construct a concrete instance of `ApplicationStatusServicesWorkloaddefinitionInput` via:
//
//	ApplicationStatusServicesWorkloaddefinitionArgs{...}
type ApplicationStatusServicesWorkloaddefinitionInput interface {
	pulumi.Input

	ToApplicationStatusServicesWorkloaddefinitionOutput() ApplicationStatusServicesWorkloaddefinitionOutput
	ToApplicationStatusServicesWorkloaddefinitionOutputWithContext(context.Context) ApplicationStatusServicesWorkloaddefinitionOutput
}

// WorkloadDefinition is the definition of a WorkloadDefinition, such as deployments/apps.v1
type ApplicationStatusServicesWorkloaddefinitionArgs struct {
	ApiVersion pulumi.StringInput `pulumi:"apiVersion"`
	Kind       pulumi.StringInput `pulumi:"kind"`
}

func (ApplicationStatusServicesWorkloaddefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusServicesWorkloaddefinition)(nil)).Elem()
}

func (i ApplicationStatusServicesWorkloaddefinitionArgs) ToApplicationStatusServicesWorkloaddefinitionOutput() ApplicationStatusServicesWorkloaddefinitionOutput {
	return i.ToApplicationStatusServicesWorkloaddefinitionOutputWithContext(context.Background())
}

func (i ApplicationStatusServicesWorkloaddefinitionArgs) ToApplicationStatusServicesWorkloaddefinitionOutputWithContext(ctx context.Context) ApplicationStatusServicesWorkloaddefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusServicesWorkloaddefinitionOutput)
}

func (i ApplicationStatusServicesWorkloaddefinitionArgs) ToApplicationStatusServicesWorkloaddefinitionPtrOutput() ApplicationStatusServicesWorkloaddefinitionPtrOutput {
	return i.ToApplicationStatusServicesWorkloaddefinitionPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusServicesWorkloaddefinitionArgs) ToApplicationStatusServicesWorkloaddefinitionPtrOutputWithContext(ctx context.Context) ApplicationStatusServicesWorkloaddefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusServicesWorkloaddefinitionOutput).ToApplicationStatusServicesWorkloaddefinitionPtrOutputWithContext(ctx)
}

// ApplicationStatusServicesWorkloaddefinitionPtrInput is an input type that accepts ApplicationStatusServicesWorkloaddefinitionArgs, ApplicationStatusServicesWorkloaddefinitionPtr and ApplicationStatusServicesWorkloaddefinitionPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusServicesWorkloaddefinitionPtrInput` via:
//
//	        ApplicationStatusServicesWorkloaddefinitionArgs{...}
//
//	or:
//
//	        nil
type ApplicationStatusServicesWorkloaddefinitionPtrInput interface {
	pulumi.Input

	ToApplicationStatusServicesWorkloaddefinitionPtrOutput() ApplicationStatusServicesWorkloaddefinitionPtrOutput
	ToApplicationStatusServicesWorkloaddefinitionPtrOutputWithContext(context.Context) ApplicationStatusServicesWorkloaddefinitionPtrOutput
}

type applicationStatusServicesWorkloaddefinitionPtrType ApplicationStatusServicesWorkloaddefinitionArgs

func ApplicationStatusServicesWorkloaddefinitionPtr(v *ApplicationStatusServicesWorkloaddefinitionArgs) ApplicationStatusServicesWorkloaddefinitionPtrInput {
	return (*applicationStatusServicesWorkloaddefinitionPtrType)(v)
}

func (*applicationStatusServicesWorkloaddefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusServicesWorkloaddefinition)(nil)).Elem()
}

func (i *applicationStatusServicesWorkloaddefinitionPtrType) ToApplicationStatusServicesWorkloaddefinitionPtrOutput() ApplicationStatusServicesWorkloaddefinitionPtrOutput {
	return i.ToApplicationStatusServicesWorkloaddefinitionPtrOutputWithContext(context.Background())
}

func (i *applicationStatusServicesWorkloaddefinitionPtrType) ToApplicationStatusServicesWorkloaddefinitionPtrOutputWithContext(ctx context.Context) ApplicationStatusServicesWorkloaddefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusServicesWorkloaddefinitionPtrOutput)
}

// WorkloadDefinition is the definition of a WorkloadDefinition, such as deployments/apps.v1
type ApplicationStatusServicesWorkloaddefinitionOutput struct{ *pulumi.OutputState }

func (ApplicationStatusServicesWorkloaddefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusServicesWorkloaddefinition)(nil)).Elem()
}

func (o ApplicationStatusServicesWorkloaddefinitionOutput) ToApplicationStatusServicesWorkloaddefinitionOutput() ApplicationStatusServicesWorkloaddefinitionOutput {
	return o
}

func (o ApplicationStatusServicesWorkloaddefinitionOutput) ToApplicationStatusServicesWorkloaddefinitionOutputWithContext(ctx context.Context) ApplicationStatusServicesWorkloaddefinitionOutput {
	return o
}

func (o ApplicationStatusServicesWorkloaddefinitionOutput) ToApplicationStatusServicesWorkloaddefinitionPtrOutput() ApplicationStatusServicesWorkloaddefinitionPtrOutput {
	return o.ToApplicationStatusServicesWorkloaddefinitionPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusServicesWorkloaddefinitionOutput) ToApplicationStatusServicesWorkloaddefinitionPtrOutputWithContext(ctx context.Context) ApplicationStatusServicesWorkloaddefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationStatusServicesWorkloaddefinition) *ApplicationStatusServicesWorkloaddefinition {
		return &v
	}).(ApplicationStatusServicesWorkloaddefinitionPtrOutput)
}

func (o ApplicationStatusServicesWorkloaddefinitionOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusServicesWorkloaddefinition) string { return v.ApiVersion }).(pulumi.StringOutput)
}

func (o ApplicationStatusServicesWorkloaddefinitionOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusServicesWorkloaddefinition) string { return v.Kind }).(pulumi.StringOutput)
}

type ApplicationStatusServicesWorkloaddefinitionPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusServicesWorkloaddefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusServicesWorkloaddefinition)(nil)).Elem()
}

func (o ApplicationStatusServicesWorkloaddefinitionPtrOutput) ToApplicationStatusServicesWorkloaddefinitionPtrOutput() ApplicationStatusServicesWorkloaddefinitionPtrOutput {
	return o
}

func (o ApplicationStatusServicesWorkloaddefinitionPtrOutput) ToApplicationStatusServicesWorkloaddefinitionPtrOutputWithContext(ctx context.Context) ApplicationStatusServicesWorkloaddefinitionPtrOutput {
	return o
}

func (o ApplicationStatusServicesWorkloaddefinitionPtrOutput) Elem() ApplicationStatusServicesWorkloaddefinitionOutput {
	return o.ApplyT(func(v *ApplicationStatusServicesWorkloaddefinition) ApplicationStatusServicesWorkloaddefinition {
		if v != nil {
			return *v
		}
		var ret ApplicationStatusServicesWorkloaddefinition
		return ret
	}).(ApplicationStatusServicesWorkloaddefinitionOutput)
}

func (o ApplicationStatusServicesWorkloaddefinitionPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusServicesWorkloaddefinition) *string {
		if v == nil {
			return nil
		}
		return &v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusServicesWorkloaddefinitionPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusServicesWorkloaddefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Workflow record the status of workflow
type ApplicationStatusWorkflow struct {
	AppRevision *string `pulumi:"appRevision"`
	// ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
	//  Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
	ContextBackend *ApplicationStatusWorkflowContextbackend `pulumi:"contextBackend"`
	EndTime        *string                                  `pulumi:"endTime"`
	Finished       bool                                     `pulumi:"finished"`
	Message        *string                                  `pulumi:"message"`
	Mode           string                                   `pulumi:"mode"`
	StartTime      *string                                  `pulumi:"startTime"`
	// WorkflowRunPhase is a label for the condition of a WorkflowRun at the current time
	Status       *string                          `pulumi:"status"`
	Steps        []ApplicationStatusWorkflowSteps `pulumi:"steps"`
	Suspend      bool                             `pulumi:"suspend"`
	SuspendState *string                          `pulumi:"suspendState"`
	Terminated   bool                             `pulumi:"terminated"`
}

// ApplicationStatusWorkflowInput is an input type that accepts ApplicationStatusWorkflowArgs and ApplicationStatusWorkflowOutput values.
// You can construct a concrete instance of `ApplicationStatusWorkflowInput` via:
//
//	ApplicationStatusWorkflowArgs{...}
type ApplicationStatusWorkflowInput interface {
	pulumi.Input

	ToApplicationStatusWorkflowOutput() ApplicationStatusWorkflowOutput
	ToApplicationStatusWorkflowOutputWithContext(context.Context) ApplicationStatusWorkflowOutput
}

// Workflow record the status of workflow
type ApplicationStatusWorkflowArgs struct {
	AppRevision pulumi.StringPtrInput `pulumi:"appRevision"`
	// ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
	//  Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
	ContextBackend ApplicationStatusWorkflowContextbackendPtrInput `pulumi:"contextBackend"`
	EndTime        pulumi.StringPtrInput                           `pulumi:"endTime"`
	Finished       pulumi.BoolInput                                `pulumi:"finished"`
	Message        pulumi.StringPtrInput                           `pulumi:"message"`
	Mode           pulumi.StringInput                              `pulumi:"mode"`
	StartTime      pulumi.StringPtrInput                           `pulumi:"startTime"`
	// WorkflowRunPhase is a label for the condition of a WorkflowRun at the current time
	Status       pulumi.StringPtrInput                    `pulumi:"status"`
	Steps        ApplicationStatusWorkflowStepsArrayInput `pulumi:"steps"`
	Suspend      pulumi.BoolInput                         `pulumi:"suspend"`
	SuspendState pulumi.StringPtrInput                    `pulumi:"suspendState"`
	Terminated   pulumi.BoolInput                         `pulumi:"terminated"`
}

func (ApplicationStatusWorkflowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusWorkflow)(nil)).Elem()
}

func (i ApplicationStatusWorkflowArgs) ToApplicationStatusWorkflowOutput() ApplicationStatusWorkflowOutput {
	return i.ToApplicationStatusWorkflowOutputWithContext(context.Background())
}

func (i ApplicationStatusWorkflowArgs) ToApplicationStatusWorkflowOutputWithContext(ctx context.Context) ApplicationStatusWorkflowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusWorkflowOutput)
}

func (i ApplicationStatusWorkflowArgs) ToApplicationStatusWorkflowPtrOutput() ApplicationStatusWorkflowPtrOutput {
	return i.ToApplicationStatusWorkflowPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusWorkflowArgs) ToApplicationStatusWorkflowPtrOutputWithContext(ctx context.Context) ApplicationStatusWorkflowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusWorkflowOutput).ToApplicationStatusWorkflowPtrOutputWithContext(ctx)
}

// ApplicationStatusWorkflowPtrInput is an input type that accepts ApplicationStatusWorkflowArgs, ApplicationStatusWorkflowPtr and ApplicationStatusWorkflowPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusWorkflowPtrInput` via:
//
//	        ApplicationStatusWorkflowArgs{...}
//
//	or:
//
//	        nil
type ApplicationStatusWorkflowPtrInput interface {
	pulumi.Input

	ToApplicationStatusWorkflowPtrOutput() ApplicationStatusWorkflowPtrOutput
	ToApplicationStatusWorkflowPtrOutputWithContext(context.Context) ApplicationStatusWorkflowPtrOutput
}

type applicationStatusWorkflowPtrType ApplicationStatusWorkflowArgs

func ApplicationStatusWorkflowPtr(v *ApplicationStatusWorkflowArgs) ApplicationStatusWorkflowPtrInput {
	return (*applicationStatusWorkflowPtrType)(v)
}

func (*applicationStatusWorkflowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusWorkflow)(nil)).Elem()
}

func (i *applicationStatusWorkflowPtrType) ToApplicationStatusWorkflowPtrOutput() ApplicationStatusWorkflowPtrOutput {
	return i.ToApplicationStatusWorkflowPtrOutputWithContext(context.Background())
}

func (i *applicationStatusWorkflowPtrType) ToApplicationStatusWorkflowPtrOutputWithContext(ctx context.Context) ApplicationStatusWorkflowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusWorkflowPtrOutput)
}

// Workflow record the status of workflow
type ApplicationStatusWorkflowOutput struct{ *pulumi.OutputState }

func (ApplicationStatusWorkflowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusWorkflow)(nil)).Elem()
}

func (o ApplicationStatusWorkflowOutput) ToApplicationStatusWorkflowOutput() ApplicationStatusWorkflowOutput {
	return o
}

func (o ApplicationStatusWorkflowOutput) ToApplicationStatusWorkflowOutputWithContext(ctx context.Context) ApplicationStatusWorkflowOutput {
	return o
}

func (o ApplicationStatusWorkflowOutput) ToApplicationStatusWorkflowPtrOutput() ApplicationStatusWorkflowPtrOutput {
	return o.ToApplicationStatusWorkflowPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusWorkflowOutput) ToApplicationStatusWorkflowPtrOutputWithContext(ctx context.Context) ApplicationStatusWorkflowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationStatusWorkflow) *ApplicationStatusWorkflow {
		return &v
	}).(ApplicationStatusWorkflowPtrOutput)
}

func (o ApplicationStatusWorkflowOutput) AppRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflow) *string { return v.AppRevision }).(pulumi.StringPtrOutput)
}

// ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
//
//	Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
func (o ApplicationStatusWorkflowOutput) ContextBackend() ApplicationStatusWorkflowContextbackendPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflow) *ApplicationStatusWorkflowContextbackend { return v.ContextBackend }).(ApplicationStatusWorkflowContextbackendPtrOutput)
}

func (o ApplicationStatusWorkflowOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflow) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusWorkflowOutput) Finished() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflow) bool { return v.Finished }).(pulumi.BoolOutput)
}

func (o ApplicationStatusWorkflowOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflow) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusWorkflowOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflow) string { return v.Mode }).(pulumi.StringOutput)
}

func (o ApplicationStatusWorkflowOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflow) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// WorkflowRunPhase is a label for the condition of a WorkflowRun at the current time
func (o ApplicationStatusWorkflowOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflow) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusWorkflowOutput) Steps() ApplicationStatusWorkflowStepsArrayOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflow) []ApplicationStatusWorkflowSteps { return v.Steps }).(ApplicationStatusWorkflowStepsArrayOutput)
}

func (o ApplicationStatusWorkflowOutput) Suspend() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflow) bool { return v.Suspend }).(pulumi.BoolOutput)
}

func (o ApplicationStatusWorkflowOutput) SuspendState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflow) *string { return v.SuspendState }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusWorkflowOutput) Terminated() pulumi.BoolOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflow) bool { return v.Terminated }).(pulumi.BoolOutput)
}

type ApplicationStatusWorkflowPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusWorkflowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusWorkflow)(nil)).Elem()
}

func (o ApplicationStatusWorkflowPtrOutput) ToApplicationStatusWorkflowPtrOutput() ApplicationStatusWorkflowPtrOutput {
	return o
}

func (o ApplicationStatusWorkflowPtrOutput) ToApplicationStatusWorkflowPtrOutputWithContext(ctx context.Context) ApplicationStatusWorkflowPtrOutput {
	return o
}

func (o ApplicationStatusWorkflowPtrOutput) Elem() ApplicationStatusWorkflowOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflow) ApplicationStatusWorkflow {
		if v != nil {
			return *v
		}
		var ret ApplicationStatusWorkflow
		return ret
	}).(ApplicationStatusWorkflowOutput)
}

func (o ApplicationStatusWorkflowPtrOutput) AppRevision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflow) *string {
		if v == nil {
			return nil
		}
		return v.AppRevision
	}).(pulumi.StringPtrOutput)
}

// ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
//
//	Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
func (o ApplicationStatusWorkflowPtrOutput) ContextBackend() ApplicationStatusWorkflowContextbackendPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflow) *ApplicationStatusWorkflowContextbackend {
		if v == nil {
			return nil
		}
		return v.ContextBackend
	}).(ApplicationStatusWorkflowContextbackendPtrOutput)
}

func (o ApplicationStatusWorkflowPtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflow) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusWorkflowPtrOutput) Finished() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflow) *bool {
		if v == nil {
			return nil
		}
		return &v.Finished
	}).(pulumi.BoolPtrOutput)
}

func (o ApplicationStatusWorkflowPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflow) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusWorkflowPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflow) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusWorkflowPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflow) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// WorkflowRunPhase is a label for the condition of a WorkflowRun at the current time
func (o ApplicationStatusWorkflowPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflow) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusWorkflowPtrOutput) Steps() ApplicationStatusWorkflowStepsArrayOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflow) []ApplicationStatusWorkflowSteps {
		if v == nil {
			return nil
		}
		return v.Steps
	}).(ApplicationStatusWorkflowStepsArrayOutput)
}

func (o ApplicationStatusWorkflowPtrOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflow) *bool {
		if v == nil {
			return nil
		}
		return &v.Suspend
	}).(pulumi.BoolPtrOutput)
}

func (o ApplicationStatusWorkflowPtrOutput) SuspendState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflow) *string {
		if v == nil {
			return nil
		}
		return v.SuspendState
	}).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusWorkflowPtrOutput) Terminated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflow) *bool {
		if v == nil {
			return nil
		}
		return &v.Terminated
	}).(pulumi.BoolPtrOutput)
}

// ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
//
//	Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
type ApplicationStatusWorkflowContextbackend struct {
	// API version of the referent.
	ApiVersion *string `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath *string `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name *string `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace *string `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid *string `pulumi:"uid"`
}

// ApplicationStatusWorkflowContextbackendInput is an input type that accepts ApplicationStatusWorkflowContextbackendArgs and ApplicationStatusWorkflowContextbackendOutput values.
// You can construct a concrete instance of `ApplicationStatusWorkflowContextbackendInput` via:
//
//	ApplicationStatusWorkflowContextbackendArgs{...}
type ApplicationStatusWorkflowContextbackendInput interface {
	pulumi.Input

	ToApplicationStatusWorkflowContextbackendOutput() ApplicationStatusWorkflowContextbackendOutput
	ToApplicationStatusWorkflowContextbackendOutputWithContext(context.Context) ApplicationStatusWorkflowContextbackendOutput
}

// ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
//
//	Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
type ApplicationStatusWorkflowContextbackendArgs struct {
	// API version of the referent.
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
	FieldPath pulumi.StringPtrInput `pulumi:"fieldPath"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion pulumi.StringPtrInput `pulumi:"resourceVersion"`
	// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
	Uid pulumi.StringPtrInput `pulumi:"uid"`
}

func (ApplicationStatusWorkflowContextbackendArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusWorkflowContextbackend)(nil)).Elem()
}

func (i ApplicationStatusWorkflowContextbackendArgs) ToApplicationStatusWorkflowContextbackendOutput() ApplicationStatusWorkflowContextbackendOutput {
	return i.ToApplicationStatusWorkflowContextbackendOutputWithContext(context.Background())
}

func (i ApplicationStatusWorkflowContextbackendArgs) ToApplicationStatusWorkflowContextbackendOutputWithContext(ctx context.Context) ApplicationStatusWorkflowContextbackendOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusWorkflowContextbackendOutput)
}

func (i ApplicationStatusWorkflowContextbackendArgs) ToApplicationStatusWorkflowContextbackendPtrOutput() ApplicationStatusWorkflowContextbackendPtrOutput {
	return i.ToApplicationStatusWorkflowContextbackendPtrOutputWithContext(context.Background())
}

func (i ApplicationStatusWorkflowContextbackendArgs) ToApplicationStatusWorkflowContextbackendPtrOutputWithContext(ctx context.Context) ApplicationStatusWorkflowContextbackendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusWorkflowContextbackendOutput).ToApplicationStatusWorkflowContextbackendPtrOutputWithContext(ctx)
}

// ApplicationStatusWorkflowContextbackendPtrInput is an input type that accepts ApplicationStatusWorkflowContextbackendArgs, ApplicationStatusWorkflowContextbackendPtr and ApplicationStatusWorkflowContextbackendPtrOutput values.
// You can construct a concrete instance of `ApplicationStatusWorkflowContextbackendPtrInput` via:
//
//	        ApplicationStatusWorkflowContextbackendArgs{...}
//
//	or:
//
//	        nil
type ApplicationStatusWorkflowContextbackendPtrInput interface {
	pulumi.Input

	ToApplicationStatusWorkflowContextbackendPtrOutput() ApplicationStatusWorkflowContextbackendPtrOutput
	ToApplicationStatusWorkflowContextbackendPtrOutputWithContext(context.Context) ApplicationStatusWorkflowContextbackendPtrOutput
}

type applicationStatusWorkflowContextbackendPtrType ApplicationStatusWorkflowContextbackendArgs

func ApplicationStatusWorkflowContextbackendPtr(v *ApplicationStatusWorkflowContextbackendArgs) ApplicationStatusWorkflowContextbackendPtrInput {
	return (*applicationStatusWorkflowContextbackendPtrType)(v)
}

func (*applicationStatusWorkflowContextbackendPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusWorkflowContextbackend)(nil)).Elem()
}

func (i *applicationStatusWorkflowContextbackendPtrType) ToApplicationStatusWorkflowContextbackendPtrOutput() ApplicationStatusWorkflowContextbackendPtrOutput {
	return i.ToApplicationStatusWorkflowContextbackendPtrOutputWithContext(context.Background())
}

func (i *applicationStatusWorkflowContextbackendPtrType) ToApplicationStatusWorkflowContextbackendPtrOutputWithContext(ctx context.Context) ApplicationStatusWorkflowContextbackendPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusWorkflowContextbackendPtrOutput)
}

// ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, "must refer only to types A and B" or "UID not honored" or "name must be restricted". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.
//
//	Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .
type ApplicationStatusWorkflowContextbackendOutput struct{ *pulumi.OutputState }

func (ApplicationStatusWorkflowContextbackendOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusWorkflowContextbackend)(nil)).Elem()
}

func (o ApplicationStatusWorkflowContextbackendOutput) ToApplicationStatusWorkflowContextbackendOutput() ApplicationStatusWorkflowContextbackendOutput {
	return o
}

func (o ApplicationStatusWorkflowContextbackendOutput) ToApplicationStatusWorkflowContextbackendOutputWithContext(ctx context.Context) ApplicationStatusWorkflowContextbackendOutput {
	return o
}

func (o ApplicationStatusWorkflowContextbackendOutput) ToApplicationStatusWorkflowContextbackendPtrOutput() ApplicationStatusWorkflowContextbackendPtrOutput {
	return o.ToApplicationStatusWorkflowContextbackendPtrOutputWithContext(context.Background())
}

func (o ApplicationStatusWorkflowContextbackendOutput) ToApplicationStatusWorkflowContextbackendPtrOutputWithContext(ctx context.Context) ApplicationStatusWorkflowContextbackendPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationStatusWorkflowContextbackend) *ApplicationStatusWorkflowContextbackend {
		return &v
	}).(ApplicationStatusWorkflowContextbackendPtrOutput)
}

// API version of the referent.
func (o ApplicationStatusWorkflowContextbackendOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowContextbackend) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ApplicationStatusWorkflowContextbackendOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowContextbackend) *string { return v.FieldPath }).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ApplicationStatusWorkflowContextbackendOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowContextbackend) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ApplicationStatusWorkflowContextbackendOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowContextbackend) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ApplicationStatusWorkflowContextbackendOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowContextbackend) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ApplicationStatusWorkflowContextbackendOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowContextbackend) *string { return v.ResourceVersion }).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ApplicationStatusWorkflowContextbackendOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowContextbackend) *string { return v.Uid }).(pulumi.StringPtrOutput)
}

type ApplicationStatusWorkflowContextbackendPtrOutput struct{ *pulumi.OutputState }

func (ApplicationStatusWorkflowContextbackendPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationStatusWorkflowContextbackend)(nil)).Elem()
}

func (o ApplicationStatusWorkflowContextbackendPtrOutput) ToApplicationStatusWorkflowContextbackendPtrOutput() ApplicationStatusWorkflowContextbackendPtrOutput {
	return o
}

func (o ApplicationStatusWorkflowContextbackendPtrOutput) ToApplicationStatusWorkflowContextbackendPtrOutputWithContext(ctx context.Context) ApplicationStatusWorkflowContextbackendPtrOutput {
	return o
}

func (o ApplicationStatusWorkflowContextbackendPtrOutput) Elem() ApplicationStatusWorkflowContextbackendOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflowContextbackend) ApplicationStatusWorkflowContextbackend {
		if v != nil {
			return *v
		}
		var ret ApplicationStatusWorkflowContextbackend
		return ret
	}).(ApplicationStatusWorkflowContextbackendOutput)
}

// API version of the referent.
func (o ApplicationStatusWorkflowContextbackendPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflowContextbackend) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.
func (o ApplicationStatusWorkflowContextbackendPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflowContextbackend) *string {
		if v == nil {
			return nil
		}
		return v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ApplicationStatusWorkflowContextbackendPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflowContextbackend) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o ApplicationStatusWorkflowContextbackendPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflowContextbackend) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
func (o ApplicationStatusWorkflowContextbackendPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflowContextbackend) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
func (o ApplicationStatusWorkflowContextbackendPtrOutput) ResourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflowContextbackend) *string {
		if v == nil {
			return nil
		}
		return v.ResourceVersion
	}).(pulumi.StringPtrOutput)
}

// UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
func (o ApplicationStatusWorkflowContextbackendPtrOutput) Uid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationStatusWorkflowContextbackend) *string {
		if v == nil {
			return nil
		}
		return v.Uid
	}).(pulumi.StringPtrOutput)
}

// WorkflowStepStatus record the status of a workflow step, include step status and subStep status
type ApplicationStatusWorkflowSteps struct {
	// FirstExecuteTime is the first time this step execution.
	FirstExecuteTime *string `pulumi:"firstExecuteTime"`
	Id               string  `pulumi:"id"`
	// LastExecuteTime is the last time this step execution.
	LastExecuteTime *string `pulumi:"lastExecuteTime"`
	// A human readable message indicating details about why the workflowStep is in this state.
	Message *string `pulumi:"message"`
	Name    *string `pulumi:"name"`
	// WorkflowStepPhase describes the phase of a workflow step.
	Phase *string `pulumi:"phase"`
	// A brief CamelCase message indicating details about why the workflowStep is in this state.
	Reason   *string                                  `pulumi:"reason"`
	SubSteps []ApplicationStatusWorkflowStepsSubsteps `pulumi:"subSteps"`
	Type     *string                                  `pulumi:"type"`
}

// ApplicationStatusWorkflowStepsInput is an input type that accepts ApplicationStatusWorkflowStepsArgs and ApplicationStatusWorkflowStepsOutput values.
// You can construct a concrete instance of `ApplicationStatusWorkflowStepsInput` via:
//
//	ApplicationStatusWorkflowStepsArgs{...}
type ApplicationStatusWorkflowStepsInput interface {
	pulumi.Input

	ToApplicationStatusWorkflowStepsOutput() ApplicationStatusWorkflowStepsOutput
	ToApplicationStatusWorkflowStepsOutputWithContext(context.Context) ApplicationStatusWorkflowStepsOutput
}

// WorkflowStepStatus record the status of a workflow step, include step status and subStep status
type ApplicationStatusWorkflowStepsArgs struct {
	// FirstExecuteTime is the first time this step execution.
	FirstExecuteTime pulumi.StringPtrInput `pulumi:"firstExecuteTime"`
	Id               pulumi.StringInput    `pulumi:"id"`
	// LastExecuteTime is the last time this step execution.
	LastExecuteTime pulumi.StringPtrInput `pulumi:"lastExecuteTime"`
	// A human readable message indicating details about why the workflowStep is in this state.
	Message pulumi.StringPtrInput `pulumi:"message"`
	Name    pulumi.StringPtrInput `pulumi:"name"`
	// WorkflowStepPhase describes the phase of a workflow step.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// A brief CamelCase message indicating details about why the workflowStep is in this state.
	Reason   pulumi.StringPtrInput                            `pulumi:"reason"`
	SubSteps ApplicationStatusWorkflowStepsSubstepsArrayInput `pulumi:"subSteps"`
	Type     pulumi.StringPtrInput                            `pulumi:"type"`
}

func (ApplicationStatusWorkflowStepsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusWorkflowSteps)(nil)).Elem()
}

func (i ApplicationStatusWorkflowStepsArgs) ToApplicationStatusWorkflowStepsOutput() ApplicationStatusWorkflowStepsOutput {
	return i.ToApplicationStatusWorkflowStepsOutputWithContext(context.Background())
}

func (i ApplicationStatusWorkflowStepsArgs) ToApplicationStatusWorkflowStepsOutputWithContext(ctx context.Context) ApplicationStatusWorkflowStepsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusWorkflowStepsOutput)
}

// ApplicationStatusWorkflowStepsArrayInput is an input type that accepts ApplicationStatusWorkflowStepsArray and ApplicationStatusWorkflowStepsArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusWorkflowStepsArrayInput` via:
//
//	ApplicationStatusWorkflowStepsArray{ ApplicationStatusWorkflowStepsArgs{...} }
type ApplicationStatusWorkflowStepsArrayInput interface {
	pulumi.Input

	ToApplicationStatusWorkflowStepsArrayOutput() ApplicationStatusWorkflowStepsArrayOutput
	ToApplicationStatusWorkflowStepsArrayOutputWithContext(context.Context) ApplicationStatusWorkflowStepsArrayOutput
}

type ApplicationStatusWorkflowStepsArray []ApplicationStatusWorkflowStepsInput

func (ApplicationStatusWorkflowStepsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusWorkflowSteps)(nil)).Elem()
}

func (i ApplicationStatusWorkflowStepsArray) ToApplicationStatusWorkflowStepsArrayOutput() ApplicationStatusWorkflowStepsArrayOutput {
	return i.ToApplicationStatusWorkflowStepsArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusWorkflowStepsArray) ToApplicationStatusWorkflowStepsArrayOutputWithContext(ctx context.Context) ApplicationStatusWorkflowStepsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusWorkflowStepsArrayOutput)
}

// WorkflowStepStatus record the status of a workflow step, include step status and subStep status
type ApplicationStatusWorkflowStepsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusWorkflowStepsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusWorkflowSteps)(nil)).Elem()
}

func (o ApplicationStatusWorkflowStepsOutput) ToApplicationStatusWorkflowStepsOutput() ApplicationStatusWorkflowStepsOutput {
	return o
}

func (o ApplicationStatusWorkflowStepsOutput) ToApplicationStatusWorkflowStepsOutputWithContext(ctx context.Context) ApplicationStatusWorkflowStepsOutput {
	return o
}

// FirstExecuteTime is the first time this step execution.
func (o ApplicationStatusWorkflowStepsOutput) FirstExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowSteps) *string { return v.FirstExecuteTime }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusWorkflowStepsOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowSteps) string { return v.Id }).(pulumi.StringOutput)
}

// LastExecuteTime is the last time this step execution.
func (o ApplicationStatusWorkflowStepsOutput) LastExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowSteps) *string { return v.LastExecuteTime }).(pulumi.StringPtrOutput)
}

// A human readable message indicating details about why the workflowStep is in this state.
func (o ApplicationStatusWorkflowStepsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowSteps) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusWorkflowStepsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowSteps) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// WorkflowStepPhase describes the phase of a workflow step.
func (o ApplicationStatusWorkflowStepsOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowSteps) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// A brief CamelCase message indicating details about why the workflowStep is in this state.
func (o ApplicationStatusWorkflowStepsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowSteps) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusWorkflowStepsOutput) SubSteps() ApplicationStatusWorkflowStepsSubstepsArrayOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowSteps) []ApplicationStatusWorkflowStepsSubsteps { return v.SubSteps }).(ApplicationStatusWorkflowStepsSubstepsArrayOutput)
}

func (o ApplicationStatusWorkflowStepsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowSteps) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationStatusWorkflowStepsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusWorkflowStepsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusWorkflowSteps)(nil)).Elem()
}

func (o ApplicationStatusWorkflowStepsArrayOutput) ToApplicationStatusWorkflowStepsArrayOutput() ApplicationStatusWorkflowStepsArrayOutput {
	return o
}

func (o ApplicationStatusWorkflowStepsArrayOutput) ToApplicationStatusWorkflowStepsArrayOutputWithContext(ctx context.Context) ApplicationStatusWorkflowStepsArrayOutput {
	return o
}

func (o ApplicationStatusWorkflowStepsArrayOutput) Index(i pulumi.IntInput) ApplicationStatusWorkflowStepsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusWorkflowSteps {
		return vs[0].([]ApplicationStatusWorkflowSteps)[vs[1].(int)]
	}).(ApplicationStatusWorkflowStepsOutput)
}

// StepStatus record the base status of workflow step, which could be workflow step or subStep
type ApplicationStatusWorkflowStepsSubsteps struct {
	// FirstExecuteTime is the first time this step execution.
	FirstExecuteTime *string `pulumi:"firstExecuteTime"`
	Id               string  `pulumi:"id"`
	// LastExecuteTime is the last time this step execution.
	LastExecuteTime *string `pulumi:"lastExecuteTime"`
	// A human readable message indicating details about why the workflowStep is in this state.
	Message *string `pulumi:"message"`
	Name    *string `pulumi:"name"`
	// WorkflowStepPhase describes the phase of a workflow step.
	Phase *string `pulumi:"phase"`
	// A brief CamelCase message indicating details about why the workflowStep is in this state.
	Reason *string `pulumi:"reason"`
	Type   *string `pulumi:"type"`
}

// ApplicationStatusWorkflowStepsSubstepsInput is an input type that accepts ApplicationStatusWorkflowStepsSubstepsArgs and ApplicationStatusWorkflowStepsSubstepsOutput values.
// You can construct a concrete instance of `ApplicationStatusWorkflowStepsSubstepsInput` via:
//
//	ApplicationStatusWorkflowStepsSubstepsArgs{...}
type ApplicationStatusWorkflowStepsSubstepsInput interface {
	pulumi.Input

	ToApplicationStatusWorkflowStepsSubstepsOutput() ApplicationStatusWorkflowStepsSubstepsOutput
	ToApplicationStatusWorkflowStepsSubstepsOutputWithContext(context.Context) ApplicationStatusWorkflowStepsSubstepsOutput
}

// StepStatus record the base status of workflow step, which could be workflow step or subStep
type ApplicationStatusWorkflowStepsSubstepsArgs struct {
	// FirstExecuteTime is the first time this step execution.
	FirstExecuteTime pulumi.StringPtrInput `pulumi:"firstExecuteTime"`
	Id               pulumi.StringInput    `pulumi:"id"`
	// LastExecuteTime is the last time this step execution.
	LastExecuteTime pulumi.StringPtrInput `pulumi:"lastExecuteTime"`
	// A human readable message indicating details about why the workflowStep is in this state.
	Message pulumi.StringPtrInput `pulumi:"message"`
	Name    pulumi.StringPtrInput `pulumi:"name"`
	// WorkflowStepPhase describes the phase of a workflow step.
	Phase pulumi.StringPtrInput `pulumi:"phase"`
	// A brief CamelCase message indicating details about why the workflowStep is in this state.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	Type   pulumi.StringPtrInput `pulumi:"type"`
}

func (ApplicationStatusWorkflowStepsSubstepsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusWorkflowStepsSubsteps)(nil)).Elem()
}

func (i ApplicationStatusWorkflowStepsSubstepsArgs) ToApplicationStatusWorkflowStepsSubstepsOutput() ApplicationStatusWorkflowStepsSubstepsOutput {
	return i.ToApplicationStatusWorkflowStepsSubstepsOutputWithContext(context.Background())
}

func (i ApplicationStatusWorkflowStepsSubstepsArgs) ToApplicationStatusWorkflowStepsSubstepsOutputWithContext(ctx context.Context) ApplicationStatusWorkflowStepsSubstepsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusWorkflowStepsSubstepsOutput)
}

// ApplicationStatusWorkflowStepsSubstepsArrayInput is an input type that accepts ApplicationStatusWorkflowStepsSubstepsArray and ApplicationStatusWorkflowStepsSubstepsArrayOutput values.
// You can construct a concrete instance of `ApplicationStatusWorkflowStepsSubstepsArrayInput` via:
//
//	ApplicationStatusWorkflowStepsSubstepsArray{ ApplicationStatusWorkflowStepsSubstepsArgs{...} }
type ApplicationStatusWorkflowStepsSubstepsArrayInput interface {
	pulumi.Input

	ToApplicationStatusWorkflowStepsSubstepsArrayOutput() ApplicationStatusWorkflowStepsSubstepsArrayOutput
	ToApplicationStatusWorkflowStepsSubstepsArrayOutputWithContext(context.Context) ApplicationStatusWorkflowStepsSubstepsArrayOutput
}

type ApplicationStatusWorkflowStepsSubstepsArray []ApplicationStatusWorkflowStepsSubstepsInput

func (ApplicationStatusWorkflowStepsSubstepsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusWorkflowStepsSubsteps)(nil)).Elem()
}

func (i ApplicationStatusWorkflowStepsSubstepsArray) ToApplicationStatusWorkflowStepsSubstepsArrayOutput() ApplicationStatusWorkflowStepsSubstepsArrayOutput {
	return i.ToApplicationStatusWorkflowStepsSubstepsArrayOutputWithContext(context.Background())
}

func (i ApplicationStatusWorkflowStepsSubstepsArray) ToApplicationStatusWorkflowStepsSubstepsArrayOutputWithContext(ctx context.Context) ApplicationStatusWorkflowStepsSubstepsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationStatusWorkflowStepsSubstepsArrayOutput)
}

// StepStatus record the base status of workflow step, which could be workflow step or subStep
type ApplicationStatusWorkflowStepsSubstepsOutput struct{ *pulumi.OutputState }

func (ApplicationStatusWorkflowStepsSubstepsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationStatusWorkflowStepsSubsteps)(nil)).Elem()
}

func (o ApplicationStatusWorkflowStepsSubstepsOutput) ToApplicationStatusWorkflowStepsSubstepsOutput() ApplicationStatusWorkflowStepsSubstepsOutput {
	return o
}

func (o ApplicationStatusWorkflowStepsSubstepsOutput) ToApplicationStatusWorkflowStepsSubstepsOutputWithContext(ctx context.Context) ApplicationStatusWorkflowStepsSubstepsOutput {
	return o
}

// FirstExecuteTime is the first time this step execution.
func (o ApplicationStatusWorkflowStepsSubstepsOutput) FirstExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowStepsSubsteps) *string { return v.FirstExecuteTime }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusWorkflowStepsSubstepsOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowStepsSubsteps) string { return v.Id }).(pulumi.StringOutput)
}

// LastExecuteTime is the last time this step execution.
func (o ApplicationStatusWorkflowStepsSubstepsOutput) LastExecuteTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowStepsSubsteps) *string { return v.LastExecuteTime }).(pulumi.StringPtrOutput)
}

// A human readable message indicating details about why the workflowStep is in this state.
func (o ApplicationStatusWorkflowStepsSubstepsOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowStepsSubsteps) *string { return v.Message }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusWorkflowStepsSubstepsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowStepsSubsteps) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// WorkflowStepPhase describes the phase of a workflow step.
func (o ApplicationStatusWorkflowStepsSubstepsOutput) Phase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowStepsSubsteps) *string { return v.Phase }).(pulumi.StringPtrOutput)
}

// A brief CamelCase message indicating details about why the workflowStep is in this state.
func (o ApplicationStatusWorkflowStepsSubstepsOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowStepsSubsteps) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

func (o ApplicationStatusWorkflowStepsSubstepsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationStatusWorkflowStepsSubsteps) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ApplicationStatusWorkflowStepsSubstepsArrayOutput struct{ *pulumi.OutputState }

func (ApplicationStatusWorkflowStepsSubstepsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApplicationStatusWorkflowStepsSubsteps)(nil)).Elem()
}

func (o ApplicationStatusWorkflowStepsSubstepsArrayOutput) ToApplicationStatusWorkflowStepsSubstepsArrayOutput() ApplicationStatusWorkflowStepsSubstepsArrayOutput {
	return o
}

func (o ApplicationStatusWorkflowStepsSubstepsArrayOutput) ToApplicationStatusWorkflowStepsSubstepsArrayOutputWithContext(ctx context.Context) ApplicationStatusWorkflowStepsSubstepsArrayOutput {
	return o
}

func (o ApplicationStatusWorkflowStepsSubstepsArrayOutput) Index(i pulumi.IntInput) ApplicationStatusWorkflowStepsSubstepsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApplicationStatusWorkflowStepsSubsteps {
		return vs[0].([]ApplicationStatusWorkflowStepsSubsteps)[vs[1].(int)]
	}).(ApplicationStatusWorkflowStepsSubstepsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecInput)(nil)).Elem(), ApplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecPtrInput)(nil)).Elem(), ApplicationSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecComponentsInput)(nil)).Elem(), ApplicationSpecComponentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecComponentsArrayInput)(nil)).Elem(), ApplicationSpecComponentsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecComponentsTraitsInput)(nil)).Elem(), ApplicationSpecComponentsTraitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecComponentsTraitsArrayInput)(nil)).Elem(), ApplicationSpecComponentsTraitsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanInput)(nil)).Elem(), ApplicationSpecRolloutplanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanPtrInput)(nil)).Elem(), ApplicationSpecRolloutplanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanCanarymetricInput)(nil)).Elem(), ApplicationSpecRolloutplanCanarymetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanCanarymetricArrayInput)(nil)).Elem(), ApplicationSpecRolloutplanCanarymetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanCanarymetricMetricsrangeInput)(nil)).Elem(), ApplicationSpecRolloutplanCanarymetricMetricsrangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanCanarymetricMetricsrangePtrInput)(nil)).Elem(), ApplicationSpecRolloutplanCanarymetricMetricsrangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanCanarymetricTemplaterefInput)(nil)).Elem(), ApplicationSpecRolloutplanCanarymetricTemplaterefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanCanarymetricTemplaterefPtrInput)(nil)).Elem(), ApplicationSpecRolloutplanCanarymetricTemplaterefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesInput)(nil)).Elem(), ApplicationSpecRolloutplanRolloutbatchesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesArrayInput)(nil)).Elem(), ApplicationSpecRolloutplanRolloutbatchesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksInput)(nil)).Elem(), ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayInput)(nil)).Elem(), ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesCanarymetricInput)(nil)).Elem(), ApplicationSpecRolloutplanRolloutbatchesCanarymetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayInput)(nil)).Elem(), ApplicationSpecRolloutplanRolloutbatchesCanarymetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeInput)(nil)).Elem(), ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrInput)(nil)).Elem(), ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefInput)(nil)).Elem(), ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrInput)(nil)).Elem(), ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanRolloutwebhooksInput)(nil)).Elem(), ApplicationSpecRolloutplanRolloutwebhooksArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationSpecRolloutplanRolloutwebhooksArrayInput)(nil)).Elem(), ApplicationSpecRolloutplanRolloutwebhooksArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusInput)(nil)).Elem(), ApplicationStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusPtrInput)(nil)).Elem(), ApplicationStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusAppliedresourcesInput)(nil)).Elem(), ApplicationStatusAppliedresourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusAppliedresourcesArrayInput)(nil)).Elem(), ApplicationStatusAppliedresourcesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusComponentsInput)(nil)).Elem(), ApplicationStatusComponentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusComponentsArrayInput)(nil)).Elem(), ApplicationStatusComponentsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusConditionsInput)(nil)).Elem(), ApplicationStatusConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusConditionsArrayInput)(nil)).Elem(), ApplicationStatusConditionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusLatestrevisionInput)(nil)).Elem(), ApplicationStatusLatestrevisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusLatestrevisionPtrInput)(nil)).Elem(), ApplicationStatusLatestrevisionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusPolicyInput)(nil)).Elem(), ApplicationStatusPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusPolicyArrayInput)(nil)).Elem(), ApplicationStatusPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusServicesInput)(nil)).Elem(), ApplicationStatusServicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusServicesArrayInput)(nil)).Elem(), ApplicationStatusServicesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusServicesScopesInput)(nil)).Elem(), ApplicationStatusServicesScopesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusServicesScopesArrayInput)(nil)).Elem(), ApplicationStatusServicesScopesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusServicesTraitsInput)(nil)).Elem(), ApplicationStatusServicesTraitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusServicesTraitsArrayInput)(nil)).Elem(), ApplicationStatusServicesTraitsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusServicesWorkloaddefinitionInput)(nil)).Elem(), ApplicationStatusServicesWorkloaddefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusServicesWorkloaddefinitionPtrInput)(nil)).Elem(), ApplicationStatusServicesWorkloaddefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusWorkflowInput)(nil)).Elem(), ApplicationStatusWorkflowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusWorkflowPtrInput)(nil)).Elem(), ApplicationStatusWorkflowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusWorkflowContextbackendInput)(nil)).Elem(), ApplicationStatusWorkflowContextbackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusWorkflowContextbackendPtrInput)(nil)).Elem(), ApplicationStatusWorkflowContextbackendArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusWorkflowStepsInput)(nil)).Elem(), ApplicationStatusWorkflowStepsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusWorkflowStepsArrayInput)(nil)).Elem(), ApplicationStatusWorkflowStepsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusWorkflowStepsSubstepsInput)(nil)).Elem(), ApplicationStatusWorkflowStepsSubstepsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationStatusWorkflowStepsSubstepsArrayInput)(nil)).Elem(), ApplicationStatusWorkflowStepsSubstepsArray{})
	pulumi.RegisterOutputType(ApplicationSpecOutput{})
	pulumi.RegisterOutputType(ApplicationSpecPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecComponentsOutput{})
	pulumi.RegisterOutputType(ApplicationSpecComponentsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSpecComponentsTraitsOutput{})
	pulumi.RegisterOutputType(ApplicationSpecComponentsTraitsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanCanarymetricOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanCanarymetricArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanCanarymetricMetricsrangeOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanCanarymetricMetricsrangePtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanCanarymetricTemplaterefOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanCanarymetricTemplaterefPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanRolloutbatchesOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanRolloutbatchesArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanRolloutbatchesBatchrolloutwebhooksArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanRolloutbatchesCanarymetricOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanRolloutbatchesCanarymetricArrayOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangeOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanRolloutbatchesCanarymetricMetricsrangePtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanRolloutbatchesCanarymetricTemplaterefPtrOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanRolloutwebhooksOutput{})
	pulumi.RegisterOutputType(ApplicationSpecRolloutplanRolloutwebhooksArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusOutput{})
	pulumi.RegisterOutputType(ApplicationStatusPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusAppliedresourcesOutput{})
	pulumi.RegisterOutputType(ApplicationStatusAppliedresourcesArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusComponentsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusComponentsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusConditionsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusConditionsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusLatestrevisionOutput{})
	pulumi.RegisterOutputType(ApplicationStatusLatestrevisionPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusPolicyOutput{})
	pulumi.RegisterOutputType(ApplicationStatusPolicyArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusServicesOutput{})
	pulumi.RegisterOutputType(ApplicationStatusServicesArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusServicesScopesOutput{})
	pulumi.RegisterOutputType(ApplicationStatusServicesScopesArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusServicesTraitsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusServicesTraitsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusServicesWorkloaddefinitionOutput{})
	pulumi.RegisterOutputType(ApplicationStatusServicesWorkloaddefinitionPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusWorkflowOutput{})
	pulumi.RegisterOutputType(ApplicationStatusWorkflowPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusWorkflowContextbackendOutput{})
	pulumi.RegisterOutputType(ApplicationStatusWorkflowContextbackendPtrOutput{})
	pulumi.RegisterOutputType(ApplicationStatusWorkflowStepsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusWorkflowStepsArrayOutput{})
	pulumi.RegisterOutputType(ApplicationStatusWorkflowStepsSubstepsOutput{})
	pulumi.RegisterOutputType(ApplicationStatusWorkflowStepsSubstepsArrayOutput{})
}
